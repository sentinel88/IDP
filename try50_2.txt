
WARNING:  Please remember to change the settings for low budget problems to avoid getting stuck in an infinite loop. For low budget problems check_duplicate function is not a good idea as there are few feasible candidates in problems for low budget and one cannot avoid duplicates


Inside parse function

Reading from data file started

Partial parsing finished

13 14 6.000000 15.000000

14 13 6.000000 15.000000

11 15 5.000000 10.000000

15 11 5.000000 10.000000

22 19 5.000000 10.000000

19 22 5.000000 10.000000

9 11 4.000000 10.000000

11 9 4.000000 10.000000

7 16 4.000000 10.000000

16 7 4.000000 10.000000

Printing network data

[1,1]:0.00 0.00	[1,2]:100.00 6.00	[1,3]:100.00 4.00	[1,4]:500.00 0.00	[1,5]:200.00 0.00	[1,6]:300.00 0.00	[1,7]:500.00 0.00	[1,8]:800.00 0.00	[1,9]:500.00 0.00	[1,10]:1300.00 0.00	[1,11]:500.00 0.00	[1,12]:200.00 0.00	[1,13]:500.00 0.00	[1,14]:300.00 0.00	[1,15]:500.00 0.00	[1,16]:500.00 0.00	[1,17]:400.00 0.00	[1,18]:100.00 0.00	[1,19]:300.00 0.00	[1,20]:300.00 0.00	[1,21]:100.00 0.00	[1,22]:400.00 0.00	[1,23]:300.00 0.00	[1,24]:100.00 0.00	
[2,1]:100.00 6.00	[2,2]:0.00 0.00	[2,3]:100.00 0.00	[2,4]:200.00 0.00	[2,5]:100.00 0.00	[2,6]:400.00 5.00	[2,7]:200.00 0.00	[2,8]:400.00 0.00	[2,9]:200.00 0.00	[2,10]:600.00 0.00	[2,11]:200.00 0.00	[2,12]:100.00 0.00	[2,13]:300.00 0.00	[2,14]:100.00 0.00	[2,15]:100.00 0.00	[2,16]:400.00 0.00	[2,17]:200.00 0.00	[2,18]:0.00 0.00	[2,19]:100.00 0.00	[2,20]:100.00 0.00	[2,21]:0.00 0.00	[2,22]:100.00 0.00	[2,23]:0.00 0.00	[2,24]:0.00 0.00	
[3,1]:100.00 4.00	[3,2]:100.00 0.00	[3,3]:0.00 0.00	[3,4]:200.00 4.00	[3,5]:100.00 0.00	[3,6]:300.00 0.00	[3,7]:100.00 0.00	[3,8]:200.00 0.00	[3,9]:100.00 0.00	[3,10]:300.00 0.00	[3,11]:300.00 0.00	[3,12]:200.00 4.00	[3,13]:100.00 0.00	[3,14]:100.00 0.00	[3,15]:100.00 0.00	[3,16]:200.00 0.00	[3,17]:100.00 0.00	[3,18]:0.00 0.00	[3,19]:0.00 0.00	[3,20]:0.00 0.00	[3,21]:0.00 0.00	[3,22]:100.00 0.00	[3,23]:100.00 0.00	[3,24]:0.00 0.00	
[4,1]:500.00 0.00	[4,2]:200.00 0.00	[4,3]:200.00 4.00	[4,4]:0.00 0.00	[4,5]:500.00 2.00	[4,6]:400.00 0.00	[4,7]:400.00 0.00	[4,8]:700.00 0.00	[4,9]:700.00 0.00	[4,10]:1200.00 0.00	[4,11]:1400.00 6.00	[4,12]:600.00 0.00	[4,13]:600.00 0.00	[4,14]:500.00 0.00	[4,15]:500.00 0.00	[4,16]:800.00 0.00	[4,17]:500.00 0.00	[4,18]:100.00 0.00	[4,19]:200.00 0.00	[4,20]:300.00 0.00	[4,21]:200.00 0.00	[4,22]:400.00 0.00	[4,23]:500.00 0.00	[4,24]:200.00 0.00	
[5,1]:200.00 0.00	[5,2]:100.00 0.00	[5,3]:100.00 0.00	[5,4]:500.00 2.00	[5,5]:0.00 0.00	[5,6]:200.00 4.00	[5,7]:200.00 0.00	[5,8]:500.00 0.00	[5,9]:800.00 5.00	[5,10]:1000.00 0.00	[5,11]:500.00 0.00	[5,12]:200.00 0.00	[5,13]:200.00 0.00	[5,14]:100.00 0.00	[5,15]:200.00 0.00	[5,16]:500.00 0.00	[5,17]:200.00 0.00	[5,18]:0.00 0.00	[5,19]:100.00 0.00	[5,20]:100.00 0.00	[5,21]:100.00 0.00	[5,22]:200.00 0.00	[5,23]:100.00 0.00	[5,24]:0.00 0.00	
[6,1]:300.00 0.00	[6,2]:400.00 5.00	[6,3]:300.00 0.00	[6,4]:400.00 0.00	[6,5]:200.00 4.00	[6,6]:0.00 0.00	[6,7]:400.00 0.00	[6,8]:800.00 2.00	[6,9]:400.00 0.00	[6,10]:800.00 0.00	[6,11]:400.00 0.00	[6,12]:200.00 0.00	[6,13]:200.00 0.00	[6,14]:100.00 0.00	[6,15]:200.00 0.00	[6,16]:900.00 0.00	[6,17]:500.00 0.00	[6,18]:100.00 0.00	[6,19]:200.00 0.00	[6,20]:300.00 0.00	[6,21]:100.00 0.00	[6,22]:200.00 0.00	[6,23]:100.00 0.00	[6,24]:100.00 0.00	
[7,1]:500.00 0.00	[7,2]:200.00 0.00	[7,3]:100.00 0.00	[7,4]:400.00 0.00	[7,5]:200.00 0.00	[7,6]:400.00 0.00	[7,7]:0.00 0.00	[7,8]:1000.00 3.00	[7,9]:600.00 0.00	[7,10]:1900.00 0.00	[7,11]:500.00 0.00	[7,12]:700.00 0.00	[7,13]:400.00 0.00	[7,14]:200.00 0.00	[7,15]:500.00 0.00	[7,16]:1400.00 4.00	[7,17]:1000.00 0.00	[7,18]:200.00 2.00	[7,19]:400.00 0.00	[7,20]:500.00 0.00	[7,21]:200.00 0.00	[7,22]:500.00 0.00	[7,23]:200.00 0.00	[7,24]:100.00 0.00	
[8,1]:800.00 0.00	[8,2]:400.00 0.00	[8,3]:200.00 0.00	[8,4]:700.00 0.00	[8,5]:500.00 0.00	[8,6]:800.00 2.00	[8,7]:1000.00 3.00	[8,8]:0.00 0.00	[8,9]:800.00 10.00	[8,10]:1600.00 0.00	[8,11]:800.00 0.00	[8,12]:600.00 0.00	[8,13]:600.00 0.00	[8,14]:400.00 0.00	[8,15]:600.00 0.00	[8,16]:2200.00 5.00	[8,17]:1400.00 0.00	[8,18]:300.00 0.00	[8,19]:700.00 0.00	[8,20]:900.00 0.00	[8,21]:400.00 0.00	[8,22]:500.00 0.00	[8,23]:300.00 0.00	[8,24]:200.00 0.00	
[9,1]:500.00 0.00	[9,2]:200.00 0.00	[9,3]:100.00 0.00	[9,4]:700.00 0.00	[9,5]:800.00 5.00	[9,6]:400.00 0.00	[9,7]:600.00 0.00	[9,8]:800.00 10.00	[9,9]:0.00 0.00	[9,10]:2800.00 3.00	[9,11]:1400.00 4.00	[9,12]:600.00 0.00	[9,13]:600.00 0.00	[9,14]:600.00 0.00	[9,15]:900.00 0.00	[9,16]:1400.00 0.00	[9,17]:900.00 0.00	[9,18]:200.00 0.00	[9,19]:400.00 0.00	[9,20]:600.00 0.00	[9,21]:300.00 0.00	[9,22]:700.00 0.00	[9,23]:500.00 0.00	[9,24]:200.00 0.00	
[10,1]:1300.00 0.00	[10,2]:600.00 0.00	[10,3]:300.00 0.00	[10,4]:1200.00 0.00	[10,5]:1000.00 0.00	[10,6]:800.00 0.00	[10,7]:1900.00 0.00	[10,8]:1600.00 0.00	[10,9]:2800.00 3.00	[10,10]:0.00 0.00	[10,11]:4000.00 5.00	[10,12]:2000.00 0.00	[10,13]:1900.00 0.00	[10,14]:2100.00 0.00	[10,15]:4000.00 6.00	[10,16]:4400.00 4.00	[10,17]:3900.00 8.00	[10,18]:700.00 0.00	[10,19]:1800.00 0.00	[10,20]:2500.00 0.00	[10,21]:1200.00 0.00	[10,22]:2600.00 0.00	[10,23]:1800.00 0.00	[10,24]:800.00 0.00	
[11,1]:500.00 0.00	[11,2]:200.00 0.00	[11,3]:300.00 0.00	[11,4]:1500.00 6.00	[11,5]:500.00 0.00	[11,6]:400.00 0.00	[11,7]:500.00 0.00	[11,8]:800.00 0.00	[11,9]:1400.00 4.00	[11,10]:3900.00 5.00	[11,11]:0.00 0.00	[11,12]:1400.00 6.00	[11,13]:1000.00 0.00	[11,14]:1600.00 4.00	[11,15]:1400.00 5.00	[11,16]:1400.00 0.00	[11,17]:1000.00 0.00	[11,18]:100.00 0.00	[11,19]:400.00 0.00	[11,20]:600.00 0.00	[11,21]:400.00 0.00	[11,22]:1100.00 0.00	[11,23]:1300.00 0.00	[11,24]:600.00 0.00	
[12,1]:200.00 0.00	[12,2]:100.00 0.00	[12,3]:200.00 4.00	[12,4]:600.00 0.00	[12,5]:200.00 0.00	[12,6]:200.00 0.00	[12,7]:700.00 0.00	[12,8]:600.00 0.00	[12,9]:600.00 0.00	[12,10]:2000.00 0.00	[12,11]:1400.00 6.00	[12,12]:0.00 0.00	[12,13]:1300.00 3.00	[12,14]:700.00 0.00	[12,15]:700.00 0.00	[12,16]:700.00 0.00	[12,17]:600.00 0.00	[12,18]:200.00 0.00	[12,19]:300.00 0.00	[12,20]:400.00 0.00	[12,21]:300.00 0.00	[12,22]:700.00 0.00	[12,23]:700.00 0.00	[12,24]:500.00 0.00	
[13,1]:500.00 0.00	[13,2]:300.00 0.00	[13,3]:100.00 0.00	[13,4]:600.00 0.00	[13,5]:200.00 0.00	[13,6]:200.00 0.00	[13,7]:400.00 0.00	[13,8]:600.00 0.00	[13,9]:600.00 0.00	[13,10]:1900.00 0.00	[13,11]:1000.00 0.00	[13,12]:1300.00 3.00	[13,13]:0.00 0.00	[13,14]:600.00 6.00	[13,15]:700.00 0.00	[13,16]:600.00 0.00	[13,17]:500.00 0.00	[13,18]:100.00 0.00	[13,19]:300.00 0.00	[13,20]:600.00 0.00	[13,21]:600.00 0.00	[13,22]:1300.00 0.00	[13,23]:800.00 0.00	[13,24]:800.00 4.00	
[14,1]:300.00 0.00	[14,2]:100.00 0.00	[14,3]:100.00 0.00	[14,4]:500.00 0.00	[14,5]:100.00 0.00	[14,6]:100.00 0.00	[14,7]:200.00 0.00	[14,8]:400.00 0.00	[14,9]:600.00 0.00	[14,10]:2100.00 0.00	[14,11]:1600.00 4.00	[14,12]:700.00 0.00	[14,13]:600.00 6.00	[14,14]:0.00 0.00	[14,15]:1300.00 5.00	[14,16]:700.00 0.00	[14,17]:700.00 0.00	[14,18]:100.00 0.00	[14,19]:300.00 0.00	[14,20]:500.00 0.00	[14,21]:400.00 0.00	[14,22]:1200.00 0.00	[14,23]:1100.00 4.00	[14,24]:400.00 0.00	
[15,1]:500.00 0.00	[15,2]:100.00 0.00	[15,3]:100.00 0.00	[15,4]:500.00 0.00	[15,5]:200.00 0.00	[15,6]:200.00 0.00	[15,7]:500.00 0.00	[15,8]:600.00 0.00	[15,9]:1000.00 0.00	[15,10]:4000.00 6.00	[15,11]:1400.00 5.00	[15,12]:700.00 0.00	[15,13]:700.00 0.00	[15,14]:1300.00 5.00	[15,15]:0.00 0.00	[15,16]:1200.00 0.00	[15,17]:1500.00 0.00	[15,18]:200.00 0.00	[15,19]:800.00 3.00	[15,20]:1100.00 0.00	[15,21]:800.00 0.00	[15,22]:2600.00 3.00	[15,23]:1000.00 0.00	[15,24]:400.00 0.00	
[16,1]:500.00 0.00	[16,2]:400.00 0.00	[16,3]:200.00 0.00	[16,4]:800.00 0.00	[16,5]:500.00 0.00	[16,6]:900.00 0.00	[16,7]:1400.00 4.00	[16,8]:2200.00 5.00	[16,9]:1400.00 0.00	[16,10]:4400.00 4.00	[16,11]:1400.00 0.00	[16,12]:700.00 0.00	[16,13]:600.00 0.00	[16,14]:700.00 0.00	[16,15]:1200.00 0.00	[16,16]:0.00 0.00	[16,17]:2800.00 2.00	[16,18]:500.00 3.00	[16,19]:1300.00 0.00	[16,20]:1600.00 0.00	[16,21]:600.00 0.00	[16,22]:1200.00 0.00	[16,23]:500.00 0.00	[16,24]:300.00 0.00	
[17,1]:400.00 0.00	[17,2]:200.00 0.00	[17,3]:100.00 0.00	[17,4]:500.00 0.00	[17,5]:200.00 0.00	[17,6]:500.00 0.00	[17,7]:1000.00 0.00	[17,8]:1400.00 0.00	[17,9]:900.00 0.00	[17,10]:3900.00 8.00	[17,11]:1000.00 0.00	[17,12]:600.00 0.00	[17,13]:500.00 0.00	[17,14]:700.00 0.00	[17,15]:1500.00 0.00	[17,16]:2800.00 2.00	[17,17]:0.00 0.00	[17,18]:600.00 0.00	[17,19]:1700.00 2.00	[17,20]:1700.00 0.00	[17,21]:600.00 0.00	[17,22]:1700.00 0.00	[17,23]:600.00 0.00	[17,24]:300.00 0.00	
[18,1]:100.00 0.00	[18,2]:0.00 0.00	[18,3]:0.00 0.00	[18,4]:100.00 0.00	[18,5]:0.00 0.00	[18,6]:100.00 0.00	[18,7]:200.00 2.00	[18,8]:300.00 0.00	[18,9]:200.00 0.00	[18,10]:700.00 0.00	[18,11]:200.00 0.00	[18,12]:200.00 0.00	[18,13]:100.00 0.00	[18,14]:100.00 0.00	[18,15]:200.00 0.00	[18,16]:500.00 3.00	[18,17]:600.00 0.00	[18,18]:0.00 0.00	[18,19]:300.00 0.00	[18,20]:400.00 4.00	[18,21]:100.00 0.00	[18,22]:300.00 0.00	[18,23]:100.00 0.00	[18,24]:0.00 0.00	
[19,1]:300.00 0.00	[19,2]:100.00 0.00	[19,3]:0.00 0.00	[19,4]:200.00 0.00	[19,5]:100.00 0.00	[19,6]:200.00 0.00	[19,7]:400.00 0.00	[19,8]:700.00 0.00	[19,9]:400.00 0.00	[19,10]:1800.00 0.00	[19,11]:400.00 0.00	[19,12]:300.00 0.00	[19,13]:300.00 0.00	[19,14]:300.00 0.00	[19,15]:800.00 3.00	[19,16]:1300.00 0.00	[19,17]:1700.00 2.00	[19,18]:300.00 0.00	[19,19]:0.00 0.00	[19,20]:1200.00 4.00	[19,21]:400.00 0.00	[19,22]:1200.00 5.00	[19,23]:300.00 0.00	[19,24]:100.00 0.00	
[20,1]:300.00 0.00	[20,2]:100.00 0.00	[20,3]:0.00 0.00	[20,4]:300.00 0.00	[20,5]:100.00 0.00	[20,6]:300.00 0.00	[20,7]:500.00 0.00	[20,8]:900.00 0.00	[20,9]:600.00 0.00	[20,10]:2500.00 0.00	[20,11]:600.00 0.00	[20,12]:500.00 0.00	[20,13]:600.00 0.00	[20,14]:500.00 0.00	[20,15]:1100.00 0.00	[20,16]:1600.00 0.00	[20,17]:1700.00 0.00	[20,18]:400.00 4.00	[20,19]:1200.00 4.00	[20,20]:0.00 0.00	[20,21]:1200.00 6.00	[20,22]:2400.00 5.00	[20,23]:700.00 0.00	[20,24]:400.00 0.00	
[21,1]:100.00 0.00	[21,2]:0.00 0.00	[21,3]:0.00 0.00	[21,4]:200.00 0.00	[21,5]:100.00 0.00	[21,6]:100.00 0.00	[21,7]:200.00 0.00	[21,8]:400.00 0.00	[21,9]:300.00 0.00	[21,10]:1200.00 0.00	[21,11]:400.00 0.00	[21,12]:300.00 0.00	[21,13]:600.00 0.00	[21,14]:400.00 0.00	[21,15]:800.00 0.00	[21,16]:600.00 0.00	[21,17]:600.00 0.00	[21,18]:100.00 0.00	[21,19]:400.00 0.00	[21,20]:1200.00 6.00	[21,21]:0.00 0.00	[21,22]:1800.00 2.00	[21,23]:700.00 0.00	[21,24]:500.00 3.00	
[22,1]:400.00 0.00	[22,2]:100.00 0.00	[22,3]:100.00 0.00	[22,4]:400.00 0.00	[22,5]:200.00 0.00	[22,6]:200.00 0.00	[22,7]:500.00 0.00	[22,8]:500.00 0.00	[22,9]:700.00 0.00	[22,10]:2600.00 0.00	[22,11]:1100.00 0.00	[22,12]:700.00 0.00	[22,13]:1300.00 0.00	[22,14]:1200.00 0.00	[22,15]:2600.00 3.00	[22,16]:1200.00 0.00	[22,17]:1700.00 0.00	[22,18]:300.00 0.00	[22,19]:1200.00 5.00	[22,20]:2400.00 5.00	[22,21]:1800.00 2.00	[22,22]:0.00 0.00	[22,23]:2100.00 4.00	[22,24]:1100.00 0.00	
[23,1]:300.00 0.00	[23,2]:0.00 0.00	[23,3]:100.00 0.00	[23,4]:500.00 0.00	[23,5]:100.00 0.00	[23,6]:100.00 0.00	[23,7]:200.00 0.00	[23,8]:300.00 0.00	[23,9]:500.00 0.00	[23,10]:1800.00 0.00	[23,11]:1300.00 0.00	[23,12]:700.00 0.00	[23,13]:800.00 0.00	[23,14]:1100.00 4.00	[23,15]:1000.00 0.00	[23,16]:500.00 0.00	[23,17]:600.00 0.00	[23,18]:100.00 0.00	[23,19]:300.00 0.00	[23,20]:700.00 0.00	[23,21]:700.00 0.00	[23,22]:2100.00 4.00	[23,23]:0.00 0.00	[23,24]:700.00 2.00	
[24,1]:100.00 0.00	[24,2]:0.00 0.00	[24,3]:0.00 0.00	[24,4]:200.00 0.00	[24,5]:0.00 0.00	[24,6]:100.00 0.00	[24,7]:100.00 0.00	[24,8]:200.00 0.00	[24,9]:200.00 0.00	[24,10]:800.00 0.00	[24,11]:600.00 0.00	[24,12]:500.00 0.00	[24,13]:700.00 4.00	[24,14]:400.00 0.00	[24,15]:400.00 0.00	[24,16]:300.00 0.00	[24,17]:300.00 0.00	[24,18]:0.00 0.00	[24,19]:100.00 0.00	[24,20]:400.00 0.00	[24,21]:500.00 3.00	[24,22]:1100.00 0.00	[24,23]:700.00 2.00	[24,24]:0.00 0.00	
Exiting parse function

Entering generate_rand

Entering encode_ga_cand
0 1 0 0 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Exiting feasiblity

Entering encode_ga_cand
1 1 0 1 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 1 1 1 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 0 0 1 1 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 1 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 0 0 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 0 1 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 0 1 0 0 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 0 0 0 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 1 0 1 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 0 1 1 0 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Exiting generate_rand

Genetic algorithm: Iteration 1


************************************************
Generation 1
************************************************
Candidate 1: 0100010011
Candidate 2: 1101010000
Candidate 3: 0010000001
Candidate 4: 1100000010
Candidate 5: 1100100010
Candidate 6: 0100010010
Candidate 7: 0010000111
Candidate 8: 0000001001
Candidate 9: 0010000100
Candidate 10: 0011011010
************************************************

Iteration 1: Candidate 1

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18573 rows        44429 cols       127339 elements
Crash basis containing 9 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         45.006400      D   1057     0        .000000     0
  9921       3076276.058      D   1636     0        .000000     2
 14250       3627752.848      D   1340     0        .000000     4
 17536       3979579.115      D   1366     0        .000000     6
 20577       4200746.735      D    636     0        .000000     8
 22324       4232027.922      P      0     0        .000000     9
Uncrunching matrix
Optimal solution found
Dual solved problem
  22324 simplex iterations in 9s

Final objective                         : 4.232027922455744e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[14, 13] = 0.000000
[19, 22] = 0.000000
[7, 16] = 0.000000
[16, 7] = 0.000000

Objective value: 4232027.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0100010011
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 2

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18512 rows        44330 cols       127065 elements
Crash basis containing 10 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         50.006400      D   1056     0        .000000     0
  9459       3357640.731      D   1391     0        .000000     2
 13471       3898685.897      D   1620     0        .000000     4
 16311       4136232.219      D    971     0        .000000     6
 19096       4228866.901      D    566     0        .000000     7
 19675       4232032.922      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  19675 simplex iterations in 8s

Final objective                         : 4.232032922455743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.441e-15 / 4.441e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[13, 14] = 0.000000
[14, 13] = 0.000000
[15, 11] = 0.000000
[19, 22] = 0.000000

Objective value: 4232032.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 1101010000
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 3

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       19978 (      0 spare) rows
       47424 (      0 spare) structural columns
      140188 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     19978 rows        47424 cols       140188 elements
Presolved problem has:
     18353 rows        43168 cols       123776 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.003200      D   1059     0        .000000     0
  9632       3256835.744      D   1716     0        .000000     2
 13979       3888801.659      D   1563     0        .000000     4
 17078       4081944.121      D    928     0        .000000     6
 20403       4226595.826      D    366     0        .000000     8
 21152       4232002.919      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  21152 simplex iterations in 8s

Final objective                         : 4.232002919255743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[11, 15] = 0.000000
[16, 7] = 0.000000

Objective value: 4232002.919256

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010000001
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 4

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20058 (      0 spare) rows
       48032 (      0 spare) structural columns
      141403 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20058 rows        48032 cols       141403 elements
Presolved problem has:
     18525 rows        43897 cols       125792 elements
Crash basis containing 9 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         40.004800      D   1057     0        .000000     0
 10164       3010134.156      D   1266     0        .000000     2
 13735       3579096.614      D   1597     0        .000000     4
 17097       3967522.606      D    900     0        .000000     6
 19763       4131860.889      D    836     0        .000000     8
 23303       4232022.921      P      0     0        .000000    10
Uncrunching matrix
Optimal solution found
Dual solved problem
  23303 simplex iterations in 10s

Final objective                         : 4.232022920855743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[13, 14] = 0.000000
[14, 13] = 0.000000
[7, 16] = 0.000000

Objective value: 4232022.920856

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 1100000010
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 5

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18573 rows        44429 cols       127339 elements
Crash basis containing 9 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         50.006400      D   1057     0        .000000     0
  9872       3176484.354      D   1446     0        .000000     2
 13654       3773221.372      D   1418     0        .000000     4
 16765       4081856.266      D   1367     0        .000000     6
 19806       4223859.678      D    742     0        .000000     7
 20619       4232032.922      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  20619 simplex iterations in 8s

Final objective                         : 4.232032922455743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[13, 14] = 0.000000
[14, 13] = 0.000000
[22, 19] = 0.000000
[7, 16] = 0.000000

Objective value: 4232032.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 1100100010
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 6

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20058 (      0 spare) rows
       48032 (      0 spare) structural columns
      141403 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20058 rows        48032 cols       141403 elements
Presolved problem has:
     18462 rows        43799 cols       125597 elements
Crash basis containing 10 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         35.004800      D   1056     0        .000000     0
 10000       3573709.163      D   1498     0        .000000     2
 14001       4067431.560      D   1158     0        .000000     4
 17027       4219572.650      D    634     0        .000000     6
 18171       4232017.921      P      0     0        .000000     6
Uncrunching matrix
Optimal solution found
Dual solved problem
  18171 simplex iterations in 6s

Final objective                         : 4.232017920855744e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[14, 13] = 0.000000
[19, 22] = 0.000000
[7, 16] = 0.000000

Objective value: 4232017.920856

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0100010010
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 7

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18512 rows        44329 cols       127062 elements
Crash basis containing 12 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         40.006400      D   1060     0        .000000     0
  9654       3272794.979      D   1562     0        .000000     2
 14385       3886368.783      D   1419     0        .000000     4
 17486       4149686.895      D    624     0        .000000     6
 20265       4232022.922      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  20265 simplex iterations in 8s

Final objective                         : 4.232022922455743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 8.438e-15 / 8.438e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[11, 15] = 0.000000
[11, 9] = 0.000000
[7, 16] = 0.000000
[16, 7] = 0.000000

Objective value: 4232022.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010000111
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 8

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       19978 (      0 spare) rows
       47424 (      0 spare) structural columns
      140188 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     19978 rows        47424 cols       140188 elements
Presolved problem has:
     18353 rows        43168 cols       123776 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.003200      D   1059     0        .000000     0
  9944       3245576.852      D   1769     0        .000000     2
 14412       3856604.110      D   1079     0        .000000     4
 17323       4108631.288      D   1151     0        .000000     6
 20152       4221852.604      D    403     0        .000000     8
 21433       4232002.919      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  21433 simplex iterations in 8s

Final objective                         : 4.232002919255743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[9, 11] = 0.000000
[16, 7] = 0.000000

Objective value: 4232002.919256

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000001001
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 9

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       19978 (      0 spare) rows
       47424 (      0 spare) structural columns
      140188 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     19978 rows        47424 cols       140188 elements
Presolved problem has:
     18292 rows        43069 cols       123502 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.003200      D   1058     0        .000000     0
  9764       3475116.031      D   1522     0        .000000     2
 14458       4090749.351      D    615     0        .000000     4
 17755       4232002.919      P      0     0        .000000     6
Uncrunching matrix
Optimal solution found
Dual solved problem
  17755 simplex iterations in 6s

Final objective                         : 4.232002919255743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 6.217e-15 / 6.217e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[11, 15] = 0.000000
[11, 9] = 0.000000

Objective value: 4232002.919256

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010000100
************************************************
Fitness: 671.006592
************************************************

Iteration 1: Candidate 10

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20218 (      0 spare) rows
       49248 (      0 spare) structural columns
      143833 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20218 rows        49248 cols       143833 elements
Presolved problem has:
     18497 rows        44762 cols       128411 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         50.008000      D   1059     0        .000000     0
  9705       3430256.457      D   1461     0        .000000     2
 13783       3959253.137      D   1285     0        .000000     4
 16732       4192123.986      D    812     0        .000000     6
 18980       4232032.924      P      0     0        .000000     7
Uncrunching matrix
Optimal solution found
Dual solved problem
  18980 simplex iterations in 7s

Final objective                         : 4.232032924055743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 1.066e-14 / 1.066e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Travelers on link a
[1, 2] = 4556.000000
[1, 3] = 8156.000000
[2, 1] = 4556.000000
[2, 6] = 5947.000000
[3, 1] = 8156.000000
[3, 4] = 13923.000000
[3, 12] = 9963.000000
[4, 3] = 14016.000000
[4, 5] = 17923.000000
[4, 11] = 5200.000000
[5, 4] = 18016.000000
[5, 6] = 8764.000000
[5, 9] = 15650.000000
[6, 2] = 5947.000000
[6, 5] = 8764.000000
[6, 8] = 12520.000000
[7, 8] = 12055.000000
[7, 18] = 15815.000000
[8, 6] = 12520.000000
[8, 7] = 12050.000000
[8, 9] = 6886.000000
[8, 16] = 8451.000000
[9, 5] = 15743.000000
[9, 8] = 6881.000000
[9, 10] = 21569.000000
[10, 9] = 21757.000000
[10, 11] = 17728.000000
[10, 15] = 23162.000000
[10, 16] = 10955.000000
[10, 17] = 8100.000000
[11, 4] = 5300.000000
[11, 10] = 17528.000000
[11, 12] = 8451.000000
[11, 14] = 9703.000000
[12, 3] = 9870.000000
[12, 11] = 8451.000000
[12, 13] = 12314.000000
[13, 12] = 12321.000000
[13, 24] = 11179.000000
[14, 11] = 9703.000000
[14, 15] = 9077.000000
[14, 23] = 8451.000000
[15, 10] = 23270.000000
[15, 14] = 9077.000000
[15, 19] = 19093.000000
[15, 22] = 18375.000000
[16, 8] = 8451.000000
[16, 10] = 11135.000000
[16, 17] = 11581.000000
[16, 18] = 15160.000000
[17, 10] = 8100.000000
[17, 16] = 11581.000000
[17, 19] = 10016.000000
[18, 7] = 15820.000000
[18, 16] = 15340.000000
[18, 20] = 18905.000000
[19, 15] = 19099.000000
[19, 17] = 10016.000000
[19, 20] = 8758.000000
[20, 18] = 18990.000000
[20, 19] = 8764.000000
[20, 21] = 6260.000000
[20, 22] = 7000.000000
[21, 20] = 6251.000000
[21, 22] = 8678.000000
[21, 24] = 10329.000000
[22, 15] = 18377.000000
[22, 20] = 7000.000000
[22, 21] = 8669.000000
[22, 23] = 9703.000000
[23, 14] = 8451.000000
[23, 22] = 9696.000000
[23, 24] = 7857.000000
[24, 13] = 11086.000000
[24, 21] = 10329.000000
[24, 23] = 7850.000000
[11, 15] = 0.000000
[15, 11] = 0.000000
[19, 22] = 0.000000
[9, 11] = 0.000000
[7, 16] = 0.000000

Objective value: 4232032.924056

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0011011010
************************************************
Fitness: 671.006592
************************************************


************************************************
Generation 1(Before sorting)
************************************************
Candidate 1:  0100010011	Fitness value: 671.006592
Candidate 2:  1101010000	Fitness value: 671.006592
Candidate 3:  0010000001	Fitness value: 671.006592
Candidate 4:  1100000010	Fitness value: 671.006592
Candidate 5:  1100100010	Fitness value: 671.006592
Candidate 6:  0100010010	Fitness value: 671.006592
Candidate 7:  0010000111	Fitness value: 671.006592
Candidate 8:  0000001001	Fitness value: 671.006592
Candidate 9:  0010000100	Fitness value: 671.006592
Candidate 10:  0011011010	Fitness value: 671.006592
************************************************


************************************************
Generation 1(After sorting)
************************************************
Candidate 1:  0100010011	Fitness value: 671.006592
Candidate 2:  1101010000	Fitness value: 671.006592
Candidate 3:  0010000001	Fitness value: 671.006592
Candidate 4:  1100000010	Fitness value: 671.006592
Candidate 5:  1100100010	Fitness value: 671.006592
Candidate 6:  0100010010	Fitness value: 671.006592
Candidate 7:  0010000111	Fitness value: 671.006592
Candidate 8:  0000001001	Fitness value: 671.006592
Candidate 9:  0010000100	Fitness value: 671.006592
Candidate 10:  0011011010	Fitness value: 671.006592
************************************************

Entering crossover function

Crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 3

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Exiting crossover function


************************************************
Children generated after crossover for Generation 1
************************************************
Candidate 1: 0101010000
Candidate 2: 0000000010
Candidate 3: 1100010010
Candidate 4: 0010001001
Candidate 5: 0010011010
************************************************

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 2 in the pool of children

Exiting mutation routine


************************************************
Children generated after mutation for Generation 1
************************************************
Candidate 1: 0101010000
Candidate 2: 0000001010
Candidate 3: 1100010010
Candidate 4: 0010001001
Candidate 5: 0010011010
************************************************
Iteration(Generation): 1, Child no: 1

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20058 (      0 spare) rows
       48032 (      0 spare) structural columns
      141403 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20058 rows        48032 cols       141403 elements
Presolved problem has:
     18401 rows        43700 cols       125323 elements
Crash basis containing 11 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         35.004800      D   1055     0        .000000     0
 10422       3528777.445      D   1695     0        .000000     2
 14245       3915732.196      D    897     0        .000000     4
 17291       4140798.166      D    811     0        .000000     6
 19820       4232017.921      P      0     0        .000000     7
Uncrunching matrix
Optimal solution found
Dual solved problem
  19820 simplex iterations in 7s

Final objective                         : 4.232017920855743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232017.920856

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0101010000
************************************************
Fitness: 671.006592
************************************************
Iteration(Generation): 1, Child no: 2

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       19978 (      0 spare) rows
       47424 (      0 spare) structural columns
      140188 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     19978 rows        47424 cols       140188 elements
Presolved problem has:
     18353 rows        43168 cols       123776 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.003200      D   1059     0        .000000     0
  9979       3283281.590      D   1516     0        .000000     2
 14311       3841413.373      D   1191     0        .000000     4
 17250       4109805.095      D   1138     0        .000000     6
 20160       4232002.919      P      0     0        .000000     7
Uncrunching matrix
Optimal solution found
Dual solved problem
  20160 simplex iterations in 7s

Final objective                         : 4.232002919255743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.885e-15 / 4.885e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232002.919256

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000001010
************************************************
Fitness: 671.006592
************************************************
Iteration(Generation): 1, Child no: 3

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18573 rows        44429 cols       127339 elements
Crash basis containing 9 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         50.006400      D   1057     0        .000000     0
 10397       3297441.993      D   1541     0        .000000     2
 14106       3790345.860      D   1196     0        .000000     4
 17211       4053136.569      D   1424     0        .000000     6
 19863       4203316.525      D    750     0        .000000     8
 21383       4232032.922      P      0     0        .000000     9
Uncrunching matrix
Optimal solution found
Dual solved problem
  21383 simplex iterations in 9s

Final objective                         : 4.232032922455743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 1.066e-14 / 1.066e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232032.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 1100010010
************************************************
Fitness: 671.006592
************************************************
Iteration(Generation): 1, Child no: 4

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20058 (      0 spare) rows
       48032 (      0 spare) structural columns
      141403 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20058 rows        48032 cols       141403 elements
Presolved problem has:
     18401 rows        43699 cols       125320 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         30.004800      D   1059     0        .000000     0
  9316       3073884.683      D   1435     0        .000000     2
 13424       3758047.647      D   1559     0        .000000     4
 16620       4111674.525      D   1103     0        .000000     6
 19647       4231504.828      D    169     0        .000000     8
 19824       4232012.921      P      0     0        .000000     8
Uncrunching matrix
Optimal solution found
Dual solved problem
  19824 simplex iterations in 8s

Final objective                         : 4.232012920855744e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 6.217e-15 / 6.217e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232012.920856

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010001001
************************************************
Fitness: 671.006592
************************************************
Iteration(Generation): 1, Child no: 5

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20138 (      0 spare) rows
       48640 (      0 spare) structural columns
      142618 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20138 rows        48640 cols       142618 elements
Presolved problem has:
     18449 rows        44231 cols       126867 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         40.006400      D   1059     0        .000000     0
  9994       3234416.153      D   1876     0        .000000     2
 14380       3851920.079      D    996     0        .000000     4
 17895       4177850.640      D   1352     0        .000000     6
 20264       4232022.922      P      0     0        .000000     7
Uncrunching matrix
Optimal solution found
Dual solved problem
  20264 simplex iterations in 7s

Final objective                         : 4.232022922455744e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 1.066e-14 / 1.066e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232022.922456

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010011010
************************************************
Fitness: 671.006592
************************************************


************************************************
Children sorted after crossover and mutation for Generation 1
************************************************
Candidate 1:  0101010000	Fitness value: 671.006592
Candidate 2:  0000001010	Fitness value: 671.006592
Candidate 3:  1100010010	Fitness value: 671.006592
Candidate 4:  0010001001	Fitness value: 671.006592
Candidate 5:  0010011010	Fitness value: 671.006592
************************************************

Status:  l = 10, k = 0, j = 10, pool_size = 5


Finished creating the next generation

Freed ga population

Genetic algorithm: Iteration 2


************************************************
Generation 2
************************************************
Candidate 1: 0100010011
Candidate 2: 1101010000
Candidate 3: 0010000001
Candidate 4: 1100000010
Candidate 5: 1100100010
Candidate 6: 0100010010
Candidate 7: 0010000111
Candidate 8: 0000001001
Candidate 9: 0010000100
Candidate 10: 0011011010
************************************************

Iteration 2: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0100010011
************************************************

Match:
************************************************
Candidate: 0100010011
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0100010011
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 2

Entering cache lookup

Pattern:
************************************************
Candidate: 1101010000
************************************************

Match:
************************************************
Candidate: 1101010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 1101010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 3

Entering cache lookup

Pattern:
************************************************
Candidate: 0010000001
************************************************

Match:
************************************************
Candidate: 0010000001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010000001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 4

Entering cache lookup

Pattern:
************************************************
Candidate: 1100000010
************************************************

Match:
************************************************
Candidate: 1100000010
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 1100000010
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 1100100010
************************************************

Match:
************************************************
Candidate: 1100100010
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 1100100010
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0100010010
************************************************

Match:
************************************************
Candidate: 0100010010
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0100010010
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 7

Entering cache lookup

Pattern:
************************************************
Candidate: 0010000111
************************************************

Match:
************************************************
Candidate: 0010000111
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010000111
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0000001001
************************************************

Match:
************************************************
Candidate: 0000001001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0000001001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 9

Entering cache lookup

Pattern:
************************************************
Candidate: 0010000100
************************************************

Match:
************************************************
Candidate: 0010000100
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010000100
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0011011010
************************************************

Match:
************************************************
Candidate: 0011011010
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011011010
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before


************************************************
Generation 2(Before sorting)
************************************************
Candidate 1:  0100010011	Fitness value: 671.006592
Candidate 2:  1101010000	Fitness value: 671.006592
Candidate 3:  0010000001	Fitness value: 671.006592
Candidate 4:  1100000010	Fitness value: 671.006592
Candidate 5:  1100100010	Fitness value: 671.006592
Candidate 6:  0100010010	Fitness value: 671.006592
Candidate 7:  0010000111	Fitness value: 671.006592
Candidate 8:  0000001001	Fitness value: 671.006592
Candidate 9:  0010000100	Fitness value: 671.006592
Candidate 10:  0011011010	Fitness value: 671.006592
************************************************


************************************************
Generation 2(After sorting)
************************************************
Candidate 1:  0100010011	Fitness value: 671.006592
Candidate 2:  1101010000	Fitness value: 671.006592
Candidate 3:  0010000001	Fitness value: 671.006592
Candidate 4:  1100000010	Fitness value: 671.006592
Candidate 5:  1100100010	Fitness value: 671.006592
Candidate 6:  0100010010	Fitness value: 671.006592
Candidate 7:  0010000111	Fitness value: 671.006592
Candidate 8:  0000001001	Fitness value: 671.006592
Candidate 9:  0010000100	Fitness value: 671.006592
Candidate 10:  0011011010	Fitness value: 671.006592
************************************************

Entering crossover function

Crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Exiting crossover function


************************************************
Children generated after crossover for Generation 2
************************************************
Candidate 1: 0101010000
Candidate 2: 0000000010
Candidate 3: 0100000111
Candidate 4: 0000000100
************************************************

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 4 in the pool of children

Exiting mutation routine


************************************************
Children generated after mutation for Generation 2
************************************************
Candidate 1: 0101010000
Candidate 2: 0000000010
Candidate 3: 0100000111
Candidate 4: 0000010100
************************************************
Iteration(Generation): 2, Child no: 1

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       20058 (      0 spare) rows
       48032 (      0 spare) structural columns
      141403 (      0 spare) non-zero elements
Global Statistics
           0 entities        0 sets        0 set members
Minimizing LP TAP
Original problem has:
     20058 rows        48032 cols       141403 elements
Presolved problem has:
     18401 rows        43700 cols       125323 elements
Crash basis containing 11 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         35.004800      D   1055     0        .000000     0
 10422       3528777.445      D   1695     0        .000000     2
 14245       3915732.196      D    897     0        .000000     4
 17291       4140798.166      D    811     0        .000000     6
 19820       4232017.921      P      0     0        .000000     7
Uncrunching matrix
Optimal solution found
Dual solved problem
  19820 simplex iterations in 7s

Final objective                         : 4.232017920855743e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Objective value: 4232017.920856

Entering candidate fitness function

Candidate fitness: 671.006592

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 0101010000
************************************************
Fitness: 671.006592
************************************************
Iteration(Generation): 2, Child no: 2

Points and slopes initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	
Reading Problem TAP
Problem Statistics
       19898 (      0 spare) rows
       46816 (      0 