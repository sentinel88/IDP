Enter main

WARNING:  Please remember to change the settings for low budget problems to avoid getting stuck in an infinite loop. For low budget problems check_duplicate function is not a good idea as there are few feasible candidates in problems for low budget and one cannot avoid duplicates


Inside initialize function

Exiting initialize function

Entering init_net_data function

Exiting init_net_data function

Inside parse function

Reading from data file started

Partial parsing finished

13 14 6.000000 15.000000 5000.000000

14 13 6.000000 15.000000 5000.000000

11 15 5.000000 10.000000 5000.000000

15 11 5.000000 10.000000 5000.000000

22 19 5.000000 10.000000 5000.000000

19 22 5.000000 10.000000 5000.000000

9 11 4.000000 10.000000 5000.000000

11 9 4.000000 10.000000 5000.000000

7 16 4.000000 10.000000 5000.000000

16 7 4.000000 10.000000 5000.000000

Exiting parse function

Entering generate_rand

Entering encode_ga_cand
0 0 1 1 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering encode_ga_cand
1 1 1 0 0 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 1 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 0 1 1 1 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Duplicate random candidate generated. Ignoring it and continuing with further attempts.

Entering encode_ga_cand
1 1 0 0 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 85.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 1 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 25.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 25.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Duplicate random candidate generated. Ignoring it and continuing with further attempts.

Entering encode_ga_cand
1 0 1 1 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 15.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
0 1 1 0 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 1 0 0 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 85.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 0 0 0 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 1 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 1 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 25.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 1 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 0 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 1 0 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 1 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 0 1 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 0 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 1 1 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 90.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 1 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 1 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 1 1 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 80.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 0 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering encode_ga_cand
1 1 0 0 0 0 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 1 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 1 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
0 1 0 1 0 1 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 1 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 0 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 1 0 0 1 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 0 1 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 0 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Duplicate random candidate generated. Ignoring it and continuing with further attempts.

Entering encode_ga_cand
1 0 1 0 1 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 1 1 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 1 0 1 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 0 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 0 1 0 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 0 0 1 1 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 0 1 1 1 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 0 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 1 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 1 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 100.000000

Not feasible

Entering encode_ga_cand
1 1 1 1 0 1 1 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 90.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 1 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 1 0 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 1 0 1 1 1 0 1 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 0 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 1 0 0 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 0 1 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 1 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 75.000000

Not feasible

Entering encode_ga_cand
1 0 0 1 0 0 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 1 1 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 100.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 1 0 1 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 1 0 0 1 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
0 1 1 1 1 0 1 0 0 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 0 1 1 1 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 0 0 0 0 0 1 0 0 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Not feasible

Entering encode_ga_cand
1 0 1 1 0 1 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Not feasible

Entering encode_ga_cand
1 1 0 0 1 1 0 0 1 1 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 70.000000

Not feasible

Entering encode_ga_cand
1 1 1 0 1 1 0 0 0 0 
Existing encode_ga_cand

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Not feasible

Entering encode_ga_cand
0 0 0 1 1 0 0 1 0 1 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Not feasible

Entering encode_ga_cand
0 0 1 0 0 0 0 0 1 0 
Existing encode_ga_cand

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Exiting generate_rand

Genetic algorithm: Iteration 1


************************************************
Generation 1
************************************************
Candidate 1: 0001010000
Candidate 2: 0001000001
Candidate 3: 0100000000
Candidate 4: 0000000010
Candidate 5: 0000011000
Candidate 6: 0010000001
Candidate 7: 0000010000
Candidate 8: 0000000011
Candidate 9: 0001001000
Candidate 10: 0010000010
************************************************

Actual time: 0.000000

Iteration 1: Candidate 1

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 2.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38454 cols       114273 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9248       4023371.526      D    423     0        .000000     2
 11422       4127845.638      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  11422 simplex iterations in 3s

Final objective                         : 4.127845638240165e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 3.553e-15 / 3.553e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 5.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 7950.000000
0.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4350.000000
0.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13900.000000
0.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9950.000000
0.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13900.000000
0.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15950.000000
0.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 9] = 21650.000000
0.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	

[10, 11] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23150.000000
0.000000	21900.000000	20650.000000	19400.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 18500.000000
0.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10150.000000
0.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12650.000000
0.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 9100.000000
0.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19400.000000
0.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 14550.000000
0.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 10650.000000
0.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11600.000000
0.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 13950.000000
0.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 15900.000000
0.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9650.000000
0.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 9900.000000
0.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7050.000000
0.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 9200.000000
0.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10800.000000
0.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4127845.638240

Entering candidate fitness function

Candidate fitness: 7.001734e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0001010000
************************************************
Fitness: 7001734.500000
************************************************

Actual time: 5.000000

Iteration 1: Candidate 2

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 6.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13737 rows        38552 cols       114544 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1059     0        .000000     0
  9037       3916975.113      D    552     0        .000000     2
 12543       4147998.580      D    163     0        .000000     4
 12666       4148198.309      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12666 simplex iterations in 4s

Final objective                         : 4.148198309452707e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 3.553e-15 / 3.553e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 10.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17050.000000
0.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6600.000000
0.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 9] = 21750.000000
0.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	

[10, 11] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22800.000000
0.000000	21550.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17700.000000
0.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12400.000000
0.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19300.000000
0.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 11050.000000
0.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19200.000000
0.000000	17950.000000	16700.000000	15450.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19650.000000
0.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9850.000000
0.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 9600.000000
0.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7600.000000
0.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4148198.309453

Entering candidate fitness function

Candidate fitness: 7.093096e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0001000001
************************************************
Fitness: 7093095.500000
************************************************

Actual time: 10.000000

Iteration 1: Candidate 3

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 10.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13717 rows        38049 cols       113056 elements
Crash basis containing 11 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         15.000000      D   1055     0        .000000     0
  9219       3998076.874      D    544     0        .000000     2
 12270       4175947.203      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  12270 simplex iterations in 3s

Final objective                         : 4.175947203437933e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.441e-15 / 4.441e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 14.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14400.000000
0.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18300.000000
0.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6100.000000
0.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17050.000000
0.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8700.000000
0.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6550.000000
0.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21600.000000
0.000000	20350.000000	19100.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	

[10, 9] = 20750.000000
0.000000	19500.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22850.000000
0.000000	21600.000000	20350.000000	19100.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 4700.000000
0.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17850.000000
0.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 11150.000000
0.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 11750.000000
0.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 14900.000000
0.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[15, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19650.000000
0.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18050.000000
0.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14850.000000
0.000000	13600.000000	12350.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 7600.000000
0.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10400.000000
0.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15200.000000
0.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14700.000000
0.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 20150.000000
0.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	

[19, 17] = 9900.000000
0.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18950.000000
0.000000	17700.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5750.000000
0.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10100.000000
0.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18450.000000
0.000000	17200.000000	15950.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 13] = 4300.000000
0.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4175947.203438

Entering candidate fitness function

Candidate fitness: 7.249680e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0100000000
************************************************
Fitness: 7249679.500000
************************************************

Actual time: 14.000000

Iteration 1: Candidate 4

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 14.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13717 rows        38049 cols       113056 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1059     0        .000000     0
  9092       4022360.950      D    591     0        .000000     2
 12736       4239442.632      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12736 simplex iterations in 4s

Final objective                         : 4.239442632250952e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 18.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18000.000000
0.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16050.000000
0.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 11800.000000
0.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6800.000000
0.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 9] = 22150.000000
0.000000	20900.000000	19650.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15750.000000
0.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10100.000000
0.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18100.000000
0.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 16] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4239442.632251

Entering candidate fitness function

Candidate fitness: 7.478671e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000000010
************************************************
Fitness: 7478671.000000
************************************************

Actual time: 18.000000

Iteration 1: Candidate 5

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 18.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38454 cols       114273 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9059       4038646.562      D    435     0        .000000     2
 12012       4167871.360      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  12012 simplex iterations in 3s

Final objective                         : 4.167871360339835e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.441e-15 / 4.441e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 22.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14250.000000
0.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9350.000000
0.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13100.000000
0.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18250.000000
0.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17000.000000
0.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 12800.000000
0.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6900.000000
0.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[10, 9] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 11] = 15050.000000
0.000000	13800.000000	12550.000000	11300.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23300.000000
0.000000	22050.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5400.000000
0.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 18550.000000
0.000000	17300.000000	16050.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7750.000000
0.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12100.000000
0.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11100.000000
0.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22700.000000
0.000000	21450.000000	20200.000000	18950.000000	17700.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	

[15, 14] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19450.000000
0.000000	18200.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 7700.000000
0.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14500.000000
0.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 16200.000000
0.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 13750.000000
0.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18800.000000
0.000000	17550.000000	16300.000000	15050.000000	13800.000000	12550.000000	11300.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 9650.000000
0.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 11] = 4800.000000
0.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4167871.360340

Entering candidate fitness function

Candidate fitness: 7.205114e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000011000
************************************************
Fitness: 7205114.000000
************************************************

Actual time: 22.000000

Iteration 1: Candidate 6

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 22.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13737 rows        38552 cols       114544 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1059     0        .000000     0
  9132       3862000.464      D    501     0        .000000     2
 12874       4148316.155      D    171     0        .000000     4
 13147       4149640.484      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  13147 simplex iterations in 4s

Final objective                         : 4.149640483718212e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.885e-15 / 4.885e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 26.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6700.000000
0.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 9] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 11] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22900.000000
0.000000	21650.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 10700.000000
0.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 11700.000000
0.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14900.000000
0.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19100.000000
0.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6150.000000
0.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 9700.000000
0.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4149640.483718

Entering candidate fitness function

Candidate fitness: 7.103962e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010000001
************************************************
Fitness: 7103962.000000
************************************************

Actual time: 26.000000

Iteration 1: Candidate 7

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 27.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37951 cols       112785 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  8999       4009366.836      D    547     0        .000000     2
 12458       4217112.629      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12458 simplex iterations in 4s

Final objective                         : 4.217112629423339e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 3.553e-15 / 3.553e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 31.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13500.000000
0.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9900.000000
0.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13650.000000
0.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17650.000000
0.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15500.000000
0.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15650.000000
0.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 9] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23200.000000
0.000000	21950.000000	20700.000000	19450.000000	18200.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9750.000000
0.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8600.000000
0.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 9300.000000
0.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22600.000000
0.000000	21350.000000	20100.000000	18850.000000	17600.000000	16350.000000	15100.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14750.000000
0.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15750.000000
0.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 15150.000000
0.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 14350.000000
0.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10700.000000
0.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7100.000000
0.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 9450.000000
0.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7650.000000
0.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4217112.629423

Entering candidate fitness function

Candidate fitness: 7.408825e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000010000
************************************************
Fitness: 7408825.000000
************************************************

Actual time: 31.000000

Iteration 1: Candidate 8

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 31.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13800 rows        38651 cols       114742 elements
Crash basis containing 12 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1060     0        .000000     0
  9265       3965442.590      D    454     0        .000000     2
 12853       4231397.908      D    270     0        .000000     4
 13306       4236122.844      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  13306 simplex iterations in 4s

Final objective                         : 4.236122843868233e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 35.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18000.000000
0.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16050.000000
0.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 11800.000000
0.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6800.000000
0.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 9] = 22150.000000
0.000000	20900.000000	19650.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 12000.000000
0.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10100.000000
0.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18100.000000
0.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 16] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4236122.843868

Entering candidate fitness function

Candidate fitness: 7.473014e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0000000011
************************************************
Fitness: 7473014.500000
************************************************

Actual time: 35.000000

Iteration 1: Candidate 9

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 35.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38453 cols       114270 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9374       3830923.958      D    550     0        .000000     2
 12936       4114458.335      D    268     0        .000000     4
 13415       4118108.974      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  13415 simplex iterations in 4s

Final objective                         : 4.118108974069487e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 8.882e-15 / 8.882e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 40.000000

Inside print function

Travelers on all the links
[1, 2] = 4450.000000
0.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4250.000000
0.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14150.000000
0.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9350.000000
0.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13300.000000
0.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18150.000000
0.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5100.000000
0.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 15650.000000
0.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 12150.000000
0.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 13750.000000
0.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[10, 9] = 21400.000000
0.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	

[10, 11] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23150.000000
0.000000	21900.000000	20650.000000	19400.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6850.000000
0.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 18650.000000
0.000000	17400.000000	16150.000000	14900.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10400.000000
0.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7700.000000
0.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12450.000000
0.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8500.000000
0.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 18800.000000
0.000000	17550.000000	16300.000000	15050.000000	13800.000000	12550.000000	11300.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18300.000000
0.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14500.000000
0.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15550.000000
0.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 13550.000000
0.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19850.000000
0.000000	18600.000000	17350.000000	16100.000000	14850.000000	13600.000000	12350.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8850.000000
0.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7100.000000
0.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 9850.000000
0.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8500.000000
0.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 11] = 4300.000000
0.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4118108.974069

Entering candidate fitness function

Candidate fitness: 7.039754e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0001001000
************************************************
Fitness: 7039754.000000
************************************************

Actual time: 40.000000

Iteration 1: Candidate 10

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 40.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13737 rows        38552 cols       114544 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1059     0        .000000     0
  9082       3861572.643      D    377     0        .000000     2
 12694       4132003.017      D    356     0        .000000     4
 13781       4149601.934      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  13781 simplex iterations in 4s

Final objective                         : 4.149601934155772e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 8.438e-15 / 8.438e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 45.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6700.000000
0.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 9] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 11] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22900.000000
0.000000	21650.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15450.000000
0.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 11150.000000
0.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19100.000000
0.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6150.000000
0.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 9700.000000
0.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 16] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4149601.934156

Entering candidate fitness function

Candidate fitness: 7.103755e+06

Exiting candidate fitness function


************************************************
Iteration 1 results:
************************************************
Candidate: 0010000010
************************************************
Fitness: 7103755.000000
************************************************

Actual time: 45.000000

Actual time: 45.000000


************************************************
Generation 1(Before sorting)
************************************************
Candidate 1:  0001010000	Fitness value: 7.001734e+06
Candidate 2:  0001000001	Fitness value: 7.093096e+06
Candidate 3:  0100000000	Fitness value: 7.249680e+06
Candidate 4:  0000000010	Fitness value: 7.478671e+06
Candidate 5:  0000011000	Fitness value: 7.205114e+06
Candidate 6:  0010000001	Fitness value: 7.103962e+06
Candidate 7:  0000010000	Fitness value: 7.408825e+06
Candidate 8:  0000000011	Fitness value: 7.473014e+06
Candidate 9:  0001001000	Fitness value: 7.039754e+06
Candidate 10:  0010000010	Fitness value: 7.103755e+06
************************************************


************************************************
Generation 1(After sorting)
************************************************
Candidate 1:  0001010000	Fitness value: 7.001734e+06
Candidate 2:  0001001000	Fitness value: 7.039754e+06
Candidate 3:  0001000001	Fitness value: 7.093096e+06
Candidate 4:  0010000010	Fitness value: 7.103755e+06
Candidate 5:  0010000001	Fitness value: 7.103962e+06
Candidate 6:  0000011000	Fitness value: 7.205114e+06
Candidate 7:  0100000000	Fitness value: 7.249680e+06
Candidate 8:  0000010000	Fitness value: 7.408825e+06
Candidate 9:  0000000011	Fitness value: 7.473014e+06
Candidate 10:  0000000010	Fitness value: 7.478671e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0000011000
************************************************
************************************************
Candidate: 0000010000
************************************************
************************************************
Candidate: 0010000001
************************************************
************************************************
Candidate: 0000011000
************************************************
************************************************
Candidate: 0001000001
************************************************
************************************************
Candidate: 0010000001
************************************************
************************************************
Candidate: 0000000011
************************************************
************************************************
Candidate: 0001010000
************************************************
************************************************
Candidate: 0001000001
************************************************
************************************************
Candidate: 0001010000
************************************************

Entering crossover function

5	9	

Crossover point is 5

Second crossover point is 9
2	1	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


9	1	

Crossover point is 9

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

0	5	

Crossover point is 0

Second crossover point is 5
4	4	

0	9	

Crossover point is 0

Second crossover point is 9
7	2	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

9	6	

Crossover point is 9

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	3	

Crossover point is 1

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

0	0	2	

Crossover point is 0

Second crossover point is 2
5	7	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

2	6	

Crossover point is 2

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

1	2	

Crossover point is 1

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

7	8	

Crossover point is 7

Second crossover point is 8
3	9	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	2	

Crossover point is 9

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

0	0	3	

Crossover point is 0

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

5	7	

Crossover point is 5

Second crossover point is 7
7	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

9	4	

Crossover point is 9

Second crossover point is 4
2	0	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Child from crossover not feasible


8	7	

Crossover point is 8

Second crossover point is 7

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	8	

Crossover point is 1

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

9	6	

Crossover point is 9

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

1	2	

Crossover point is 1

Second crossover point is 2
7	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	4	

Crossover point is 6

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

2	0	

Crossover point is 2

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

2	3	

Crossover point is 2

Second crossover point is 3
4	2	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

6	1	

Crossover point is 6

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

8	4	

Crossover point is 8

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

0	8	

Crossover point is 0

Second crossover point is 8
7	2	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

8	5	

Crossover point is 8

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

9	9	3	

Crossover point is 9

Second crossover point is 3


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Child from crossover not feasible

9	6	

Crossover point is 9

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 65.000000

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 50.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 15.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 6 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 60.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 8 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 10 in the pool of children

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 2


************************************************
Generation 2
************************************************
Candidate 1: 0001010000
Candidate 2: 0000010001
Candidate 3: 0010000000
Candidate 4: 0000000001
Candidate 5: 0001010000
Candidate 6: 0001010000
Candidate 7: 1000000000
Candidate 8: 0010000001
Candidate 9: 0010010000
Candidate 10: 0001000001
************************************************

Actual time: 45.000000

Iteration 2: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0001010000
************************************************

Match:
************************************************
Candidate: 0001010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 2

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 45.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13737 rows        38553 cols       114547 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1059     0        .000000     0
  9062       3990732.851      D    410     0        .000000     2
 12381       4213851.183      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  12381 simplex iterations in 3s

Final objective                         : 4.213851182840056e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 4.441e-15 / 4.441e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 49.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13500.000000
0.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9900.000000
0.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13650.000000
0.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17650.000000
0.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15500.000000
0.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15650.000000
0.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 9] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23200.000000
0.000000	21950.000000	20700.000000	19450.000000	18200.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9750.000000
0.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8600.000000
0.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 9300.000000
0.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22600.000000
0.000000	21350.000000	20100.000000	18850.000000	17600.000000	16350.000000	15100.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 11000.000000
0.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 12000.000000
0.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 15150.000000
0.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 14350.000000
0.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10700.000000
0.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7100.000000
0.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 9450.000000
0.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7650.000000
0.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4213851.182840

Entering candidate fitness function

Candidate fitness: 7.403456e+06

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 0000010001
************************************************
Fitness: 7403455.500000
************************************************

Actual time: 49.000000

Iteration 2: Candidate 3

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 49.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37950 cols       112782 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  9154       3955628.272      D    446     0        .000000     2
 12752       4152862.964      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12752 simplex iterations in 4s

Final objective                         : 4.152862963990264e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.773e-15 / 5.773e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 53.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6700.000000
0.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 9] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 11] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22900.000000
0.000000	21650.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15450.000000
0.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14900.000000
0.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19100.000000
0.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6150.000000
0.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 9700.000000
0.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4152862.963990

Entering candidate fitness function

Candidate fitness: 7.109130e+06

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 0010000000
************************************************
Fitness: 7109130.500000
************************************************

Actual time: 53.000000

Iteration 2: Candidate 4

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 53.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13717 rows        38049 cols       113056 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1059     0        .000000     0
  9201       4086657.776      D    355     0        .000000     2
 11947       4239434.672      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  11947 simplex iterations in 3s

Final objective                         : 4.239434672289189e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 1.243e-14 / 1.243e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 57.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18000.000000
0.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16050.000000
0.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15550.000000
0.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6800.000000
0.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 9] = 22150.000000
0.000000	20900.000000	19650.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22650.000000
0.000000	21400.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 12000.000000
0.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19350.000000
0.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10100.000000
0.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18100.000000
0.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4239434.672289

Entering candidate fitness function

Candidate fitness: 7.478632e+06

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 0000000001
************************************************
Fitness: 7478631.500000
************************************************

Actual time: 57.000000

Iteration 2: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0001010000
************************************************

Match:
************************************************
Candidate: 0001010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0001010000
************************************************

Match:
************************************************
Candidate: 0001010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 7

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 57.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13717 rows        38049 cols       113056 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         15.000000      D   1059     0        .000000     0
  9177       4118120.544      D    332     0        .000000     2
 10977       4176160.906      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  10977 simplex iterations in 3s

Final objective                         : 4.176160905914142e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 61.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 11750.000000
0.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14500.000000
0.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16750.000000
0.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 4400.000000
0.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6600.000000
0.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 20850.000000
0.000000	19600.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	

[10, 9] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 11] = 18050.000000
0.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 21850.000000
0.000000	20600.000000	19350.000000	18100.000000	16850.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 7600.000000
0.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 8500.000000
0.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 11850.000000
0.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 23000.000000
0.000000	21750.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	

[15, 14] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19950.000000
0.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18350.000000
0.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14550.000000
0.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 9950.000000
0.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19700.000000
0.000000	18450.000000	17200.000000	15950.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10200.000000
0.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19400.000000
0.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17950.000000
0.000000	16700.000000	15450.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 7400.000000
0.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 14] = 4300.000000
0.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4176160.905914

Entering candidate fitness function

Candidate fitness: 7.251508e+06

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 1000000000
************************************************
Fitness: 7251508.500000
************************************************

Actual time: 61.000000

Iteration 2: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0010000001
************************************************

Match:
************************************************
Candidate: 0010000001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010000001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 2: Candidate 9

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 61.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38454 cols       114273 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9145       3927120.373      D    391     0        .000000     2
 12809       4123126.965      D    188     0        .000000     4
 12994       4124117.375      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12994 simplex iterations in 4s

Final objective                         : 4.124117375381967e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 65.000000

Inside print function

Travelers on all the links
[1, 2] = 4350.000000
0.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 7950.000000
0.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10150.000000
0.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13900.000000
0.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15200.000000
0.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6550.000000
0.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15950.000000
0.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21750.000000
0.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	

[10, 9] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 11] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 20000.000000
0.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 10700.000000
0.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 14950.000000
0.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10050.000000
0.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7550.000000
0.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 23050.000000
0.000000	21800.000000	20550.000000	19300.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 15600.000000
0.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8700.000000
0.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 13850.000000
0.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14750.000000
0.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 14750.000000
0.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19150.000000
0.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6200.000000
0.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18500.000000
0.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 7900.000000
0.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7700.000000
0.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4124117.375382

Entering candidate fitness function

Candidate fitness: 6.972904e+06

Exiting candidate fitness function


************************************************
Iteration 2 results:
************************************************
Candidate: 0010010000
************************************************
Fitness: 6972904.500000
************************************************

Actual time: 65.000000

Iteration 2: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0001000001
************************************************

Match:
************************************************
Candidate: 0001000001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001000001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 65.000000


************************************************
Generation 2(Before sorting)
************************************************
Candidate 1:  0001010000	Fitness value: 7.001734e+06
Candidate 2:  0000010001	Fitness value: 7.403456e+06
Candidate 3:  0010000000	Fitness value: 7.109130e+06
Candidate 4:  0000000001	Fitness value: 7.478632e+06
Candidate 5:  0001010000	Fitness value: 7.001734e+06
Candidate 6:  0001010000	Fitness value: 7.001734e+06
Candidate 7:  1000000000	Fitness value: 7.251508e+06
Candidate 8:  0010000001	Fitness value: 7.103962e+06
Candidate 9:  0010010000	Fitness value: 6.972904e+06
Candidate 10:  0001000001	Fitness value: 7.093096e+06
************************************************


************************************************
Generation 2(After sorting)
************************************************
Candidate 1:  0010010000	Fitness value: 6.972904e+06
Candidate 2:  0001010000	Fitness value: 7.001734e+06
Candidate 3:  0001010000	Fitness value: 7.001734e+06
Candidate 4:  0001010000	Fitness value: 7.001734e+06
Candidate 5:  0001000001	Fitness value: 7.093096e+06
Candidate 6:  0010000001	Fitness value: 7.103962e+06
Candidate 7:  0010000000	Fitness value: 7.109130e+06
Candidate 8:  1000000000	Fitness value: 7.251508e+06
Candidate 9:  0000010001	Fitness value: 7.403456e+06
Candidate 10:  0000000001	Fitness value: 7.478632e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0001010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010000000
************************************************
************************************************
Candidate: 0001010000
************************************************
************************************************
Candidate: 0000010001
************************************************
************************************************
Candidate: 0001000001
************************************************
************************************************
Candidate: 0001000001
************************************************
************************************************
Candidate: 0001010000
************************************************

Entering crossover function

1	9	

Crossover point is 1

Second crossover point is 9
9	3	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	6	

Crossover point is 9

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	4	

Crossover point is 9

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

1	0	

Crossover point is 1

Second crossover point is 0
8	1	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

5	5	6	

Crossover point is 5

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	8	

Crossover point is 3

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	9	

Crossover point is 4

Second crossover point is 9
5	9	

The parent chromosomes at these indexes are the same

9	1	

Crossover point is 9

Second crossover point is 1
5	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	5	

Crossover point is 9

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

1	4	

Crossover point is 1

Second crossover point is 4
7	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

4	3	

Crossover point is 4

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

3	8	

Crossover point is 3

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

5	0	

Crossover point is 5

Second crossover point is 0
3	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

2	9	

Crossover point is 2

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

0	8	

Crossover point is 0

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

8	5	

Crossover point is 8

Second crossover point is 5
8	8	

0	8	

Crossover point is 0

Second crossover point is 8
7	2	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

4	2	

Crossover point is 4

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

2	9	

Crossover point is 2

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

3	4	

Crossover point is 3

Second crossover point is 4
8	7	

The parent chromosomes at these indexes are the same

9	2	

Crossover point is 9

Second crossover point is 2
1	7	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

5	7	

Crossover point is 5

Second crossover point is 7

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

8	9	

Crossover point is 8

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

0	9	

Crossover point is 0

Second crossover point is 9
2	9	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

2	0	

Crossover point is 2

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	1	

Crossover point is 4

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	9	

Crossover point is 4

Second crossover point is 9
6	7	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

3	8	

Crossover point is 3

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	3	

Crossover point is 9

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

8	7	

Crossover point is 8

Second crossover point is 7
0	7	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	2	

Crossover point is 9

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

5	4	

Crossover point is 5

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 70.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 3


************************************************
Generation 3
************************************************
Candidate 1: 0010010000
Candidate 2: 0010010000
Candidate 3: 0011000000
Candidate 4: 0001000000
Candidate 5: 0001000001
Candidate 6: 0010010000
Candidate 7: 0010010000
Candidate 8: 0010010000
Candidate 9: 0010010000
Candidate 10: 0001000001
************************************************

Actual time: 65.000000

Iteration 3: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 2

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 3

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 65.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38453 cols       114270 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9445       3905928.083      D    454     0        .000000     2
 12621       4059153.481      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12621 simplex iterations in 4s

Final objective                         : 4.059153480680023e+06
  Max primal violation      (abs / rel) : 1.137e-13 / 1.137e-13
  Max dual violation        (abs / rel) : 1.066e-14 / 1.066e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 69.000000

Inside print function

Travelers on all the links
[1, 2] = 4250.000000
0.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4450.000000
0.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13883.333333
0.000000	12633.333333	11383.333333	10133.333333	8883.333333	7633.333333	6383.333333	5133.333333	3883.333333	2633.333333	1383.333333	133.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10033.333333
0.000000	8783.333333	7533.333333	6283.333333	5033.333333	3783.333333	2533.333333	1283.333333	33.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13783.333333
0.000000	12533.333333	11283.333333	10033.333333	8783.333333	7533.333333	6283.333333	5033.333333	3783.333333	2533.333333	1283.333333	33.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16850.000000
0.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6233.333333
0.000000	4983.333333	3733.333333	2483.333333	1233.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 16850.000000
0.000000	15600.000000	14350.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15200.000000
0.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12400.000000
0.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21950.000000
0.000000	20700.000000	19450.000000	18200.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	

[10, 9] = 22050.000000
0.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	

[10, 11] = 15200.000000
0.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 19283.333333
0.000000	18033.333333	16783.333333	15533.333333	14283.333333	13033.333333	11783.333333	10533.333333	9283.333333	8033.333333	6783.333333	5533.333333	4283.333333	3033.333333	1783.333333	533.333333	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6233.333333
0.000000	4983.333333	3733.333333	2483.333333	1233.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9933.333333
0.000000	8683.333333	7433.333333	6183.333333	4933.333333	3683.333333	2433.333333	1183.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 13133.333333
0.000000	11883.333333	10633.333333	9383.333333	8133.333333	6883.333333	5633.333333	4383.333333	3133.333333	1883.333333	633.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13133.333333
0.000000	11883.333333	10633.333333	9383.333333	8133.333333	6883.333333	5633.333333	4383.333333	3133.333333	1883.333333	633.333333	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10416.666667
0.000000	9166.666667	7916.666667	6666.666667	5416.666667	4166.666667	2916.666667	1666.666667	416.666667	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19383.333333
0.000000	18133.333333	16883.333333	15633.333333	14383.333333	13133.333333	11883.333333	10633.333333	9383.333333	8133.333333	6883.333333	5633.333333	4383.333333	3133.333333	1883.333333	633.333333	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 17716.666667
0.000000	16466.666667	15216.666667	13966.666667	12716.666667	11466.666667	10216.666667	8966.666667	7716.666667	6466.666667	5216.666667	3966.666667	2716.666667	1466.666667	216.666667	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14350.000000
0.000000	13100.000000	11850.000000	10600.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15200.000000
0.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14550.000000
0.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18850.000000
0.000000	17600.000000	16350.000000	15100.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18950.000000
0.000000	17700.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8666.666667
0.000000	7416.666667	6166.666667	4916.666667	3666.666667	2416.666667	1166.666667	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17716.666667
0.000000	16466.666667	15216.666667	13966.666667	12716.666667	11466.666667	10216.666667	8966.666667	7716.666667	6466.666667	5216.666667	3966.666667	2716.666667	1466.666667	216.666667	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8666.666667
0.000000	7416.666667	6166.666667	4916.666667	3666.666667	2416.666667	1166.666667	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10316.666667
0.000000	9066.666667	7816.666667	6566.666667	5316.666667	4066.666667	2816.666667	1566.666667	316.666667	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4059153.480680

Entering candidate fitness function

Candidate fitness: 6.710772e+06

Exiting candidate fitness function


************************************************
Iteration 3 results:
************************************************
Candidate: 0011000000
************************************************
Fitness: 6710771.500000
************************************************

Actual time: 69.000000

Iteration 3: Candidate 4

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 70.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37950 cols       112782 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  9391       3997401.691      D    374     0        .000000     2
 12453       4151446.351      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  12453 simplex iterations in 3s

Final objective                         : 4.151446350516790e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 74.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17050.000000
0.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6600.000000
0.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 9] = 21750.000000
0.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	

[10, 11] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22800.000000
0.000000	21550.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17700.000000
0.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12400.000000
0.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19300.000000
0.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19200.000000
0.000000	17950.000000	16700.000000	15450.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19650.000000
0.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9850.000000
0.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 9600.000000
0.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7600.000000
0.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4151446.350517

Entering candidate fitness function

Candidate fitness: 7.098402e+06

Exiting candidate fitness function


************************************************
Iteration 3 results:
************************************************
Candidate: 0001000000
************************************************
Fitness: 7098402.500000
************************************************

Actual time: 74.000000

Iteration 3: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0001000001
************************************************

Match:
************************************************
Candidate: 0001000001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001000001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 7

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 9

Entering cache lookup

Pattern:
************************************************
Candidate: 0010010000
************************************************

Match:
************************************************
Candidate: 0010010000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0010010000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 3: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0001000001
************************************************

Match:
************************************************
Candidate: 0001000001
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0001000001
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 74.000000


************************************************
Generation 3(Before sorting)
************************************************
Candidate 1:  0010010000	Fitness value: 6.972904e+06
Candidate 2:  0010010000	Fitness value: 6.972904e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0001000000	Fitness value: 7.098402e+06
Candidate 5:  0001000001	Fitness value: 7.093096e+06
Candidate 6:  0010010000	Fitness value: 6.972904e+06
Candidate 7:  0010010000	Fitness value: 6.972904e+06
Candidate 8:  0010010000	Fitness value: 6.972904e+06
Candidate 9:  0010010000	Fitness value: 6.972904e+06
Candidate 10:  0001000001	Fitness value: 7.093096e+06
************************************************


************************************************
Generation 3(After sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0010010000	Fitness value: 6.972904e+06
Candidate 3:  0010010000	Fitness value: 6.972904e+06
Candidate 4:  0010010000	Fitness value: 6.972904e+06
Candidate 5:  0010010000	Fitness value: 6.972904e+06
Candidate 6:  0010010000	Fitness value: 6.972904e+06
Candidate 7:  0010010000	Fitness value: 6.972904e+06
Candidate 8:  0001000001	Fitness value: 7.093096e+06
Candidate 9:  0001000001	Fitness value: 7.093096e+06
Candidate 10:  0001000000	Fitness value: 7.098402e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************
************************************************
Candidate: 0010010000
************************************************

Entering crossover function

4	3	

Crossover point is 4

Second crossover point is 3
2	1	

The parent chromosomes at these indexes are the same

3	0	

Crossover point is 3

Second crossover point is 0
4	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

5	2	

Crossover point is 5

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

1	7	

Crossover point is 1

Second crossover point is 7
4	0	

The parent chromosomes at these indexes are the same

0	7	

Crossover point is 0

Second crossover point is 7
3	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

2	7	

Crossover point is 2

Second crossover point is 7

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	8	

Crossover point is 9

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

0	1	

Crossover point is 0

Second crossover point is 1
9	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	1	9	

Crossover point is 1

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

5	3	

Crossover point is 5

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

8	3	

Crossover point is 8

Second crossover point is 3
5	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	8	

Crossover point is 9

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	0	

Crossover point is 6

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

1	0	

Crossover point is 1

Second crossover point is 0
7	8	

The parent chromosomes at these indexes are the same

4	2	

Crossover point is 4

Second crossover point is 2
0	1	

The parent chromosomes at these indexes are the same

2	9	

Crossover point is 2

Second crossover point is 9
1	4	

The parent chromosomes at these indexes are the same

9	3	

Crossover point is 9

Second crossover point is 3
4	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	5	

Crossover point is 4

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

5	0	

Crossover point is 5

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

8	3	

Crossover point is 8

Second crossover point is 3
2	3	

The parent chromosomes at these indexes are the same

3	1	

Crossover point is 3

Second crossover point is 1
9	3	

The parent chromosomes at these indexes are the same

7	0	

Crossover point is 7

Second crossover point is 0
4	4	

8	9	

Crossover point is 8

Second crossover point is 9
7	9	

The parent chromosomes at these indexes are the same

1	0	

Crossover point is 1

Second crossover point is 0
8	2	

The parent chromosomes at these indexes are the same

4	8	

Crossover point is 4

Second crossover point is 8
5	8	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

3	0	

Crossover point is 3

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	8	

Crossover point is 4

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	5	

Crossover point is 4

Second crossover point is 5
9	7	

The parent chromosomes at these indexes are the same

8	2	

Crossover point is 8

Second crossover point is 2
0	9	

The parent chromosomes at these indexes are the same

2	4	

Crossover point is 2

Second crossover point is 4
7	2	

The parent chromosomes at these indexes are the same

9	2	

Crossover point is 9

Second crossover point is 2
1	8	

The parent chromosomes at these indexes are the same

0	1	

Crossover point is 0

Second crossover point is 1
0	0	

9	2	

Crossover point is 9

Second crossover point is 2
5	8	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

8	4	

Crossover point is 8

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

1	9	

Crossover point is 1

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

9	3	

Crossover point is 9

Second crossover point is 3
5	8	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	4	

Crossover point is 1

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

0	1	

Crossover point is 0

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

2	6	

Crossover point is 2

Second crossover point is 6
1	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

5	3	

Crossover point is 5

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

7	4	

Crossover point is 7

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

8	4	

Crossover point is 8

Second crossover point is 4
4	8	

The parent chromosomes at these indexes are the same

7	9	

Crossover point is 7

Second crossover point is 9
6	6	

4	8	

Crossover point is 4

Second crossover point is 8
5	3	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

9	5	

Crossover point is 9

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

7	4	

Crossover point is 7

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Duplicate found

This child generated from a crossover operation is already present in this population of children. We do not consider it                  and continue with no more attempts

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 55.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 1, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 60.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 4


************************************************
Generation 4
************************************************
Candidate 1: 0011000000
Candidate 2: 0010000000
Candidate 3: 0011000000
Candidate 4: 0011000000
Candidate 5: 0011000000
Candidate 6: 0011000000
Candidate 7: 0011000000
Candidate 8: 0011000000
Candidate 9: 0011000000
Candidate 10: 0011000000
************************************************

Actual time: 74.000000

Iteration 4: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 2

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 74.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37950 cols       112782 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  9154       3955628.272      D    446     0        .000000     2
 12752       4152862.964      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12752 simplex iterations in 4s

Final objective                         : 4.152862963990264e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.773e-15 / 5.773e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 78.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6700.000000
0.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21550.000000
0.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	

[10, 9] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 11] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[10, 16] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12200.000000
0.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8650.000000
0.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 22900.000000
0.000000	21650.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15450.000000
0.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14900.000000
0.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19100.000000
0.000000	17850.000000	16600.000000	15350.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6150.000000
0.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 9700.000000
0.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 15] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4152862.963990

Entering candidate fitness function

Candidate fitness: 7.109130e+06

Exiting candidate fitness function


************************************************
Iteration 4 results:
************************************************
Candidate: 0010000000
************************************************
Fitness: 7109130.500000
************************************************

Actual time: 78.000000

Iteration 4: Candidate 3

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 4

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 7

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 9

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 4: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 78.000000


************************************************
Generation 4(Before sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0010000000	Fitness value: 7.109130e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0011000000	Fitness value: 6.710772e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0011000000	Fitness value: 6.710772e+06
Candidate 10:  0011000000	Fitness value: 6.710772e+06
************************************************


************************************************
Generation 4(After sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0011000000	Fitness value: 6.710772e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0011000000	Fitness value: 6.710772e+06
Candidate 10:  0010000000	Fitness value: 7.109130e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0010000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0010000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************

Entering crossover function

8	8	6	

Crossover point is 8

Second crossover point is 6
1	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	8	

Crossover point is 3

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	4	

Crossover point is 1

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	5	

Crossover point is 4

Second crossover point is 5
5	3	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	3	1	

Crossover point is 3

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	4	1	

Crossover point is 4

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

9	5	

Crossover point is 9

Second crossover point is 5
2	8	

The parent chromosomes at these indexes are the same

9	2	

Crossover point is 9

Second crossover point is 2
3	9	

The parent chromosomes at these indexes are the same

9	5	

Crossover point is 9

Second crossover point is 5
7	8	

The parent chromosomes at these indexes are the same

1	8	

Crossover point is 1

Second crossover point is 8
4	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

7	6	

Crossover point is 7

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	9	0	

Crossover point is 9

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	4	8	

Crossover point is 4

Second crossover point is 8
7	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	2	

Crossover point is 3

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

7	3	

Crossover point is 7

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

2	6	

Crossover point is 2

Second crossover point is 6
0	1	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	3	

Crossover point is 9

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	9	

Crossover point is 1

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

7	0	

Crossover point is 7

Second crossover point is 0
7	2	

The parent chromosomes at these indexes are the same

5	4	

Crossover point is 5

Second crossover point is 4
8	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	9	

Crossover point is 3

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

0	8	

Crossover point is 0

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

9	6	

Crossover point is 9

Second crossover point is 6
8	3	

The parent chromosomes at these indexes are the same

8	6	

Crossover point is 8

Second crossover point is 6
7	9	

The parent chromosomes at these indexes are the same

8	3	

Crossover point is 8

Second crossover point is 3
0	0	

3	3	1	

Crossover point is 3

Second crossover point is 1
2	2	

0	0	3	

Crossover point is 0

Second crossover point is 3
7	3	

The parent chromosomes at these indexes are the same

9	2	

Crossover point is 9

Second crossover point is 2
1	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	0	

Crossover point is 6

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	4	

Crossover point is 6

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

6	0	

Crossover point is 6

Second crossover point is 0
2	9	

The parent chromosomes at these indexes are the same

8	8	6	

Crossover point is 8

Second crossover point is 6
8	7	

The parent chromosomes at these indexes are the same

0	9	

Crossover point is 0

Second crossover point is 9
8	3	

The parent chromosomes at these indexes are the same

2	9	

Crossover point is 2

Second crossover point is 9
6	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	6	

Crossover point is 9

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	7	

Crossover point is 9

Second crossover point is 7

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

4	5	

Crossover point is 4

Second crossover point is 5
1	0	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

9	5	

Crossover point is 9

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	0	

Crossover point is 6

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

9	7	

Crossover point is 9

Second crossover point is 7
2	7	

The parent chromosomes at these indexes are the same

4	2	

Crossover point is 4

Second crossover point is 2
6	2	

The parent chromosomes at these indexes are the same

6	9	

Crossover point is 6

Second crossover point is 9
2	2	

5	2	

Crossover point is 5

Second crossover point is 2
8	5	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

0	8	

Crossover point is 0

Second crossover point is 8

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	9	

Crossover point is 4

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
1, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 6 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 8 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Entering feasibility
0, orig: 13, term: 14
 1, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 5


************************************************
Generation 5
************************************************
Candidate 1: 0011000000
Candidate 2: 0011000000
Candidate 3: 0011000000
Candidate 4: 0011000000
Candidate 5: 0011000000
Candidate 6: 0011000000
Candidate 7: 0001000000
Candidate 8: 0011000000
Candidate 9: 0001000100
Candidate 10: 0011000000
************************************************

Actual time: 78.000000

Iteration 5: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 2

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 3

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 4

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 7

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 78.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37950 cols       112782 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  9391       3997401.691      D    374     0        .000000     2
 12453       4151446.351      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  12453 simplex iterations in 3s

Final objective                         : 4.151446350516790e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 7.105e-15 / 7.105e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 82.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14200.000000
0.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17050.000000
0.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6600.000000
0.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22450.000000
0.000000	21200.000000	19950.000000	18700.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	

[10, 9] = 21750.000000
0.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	

[10, 11] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22800.000000
0.000000	21550.000000	20300.000000	19050.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17700.000000
0.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10450.000000
0.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7800.000000
0.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 13050.000000
0.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12400.000000
0.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19300.000000
0.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11300.000000
0.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19200.000000
0.000000	17950.000000	16700.000000	15450.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19650.000000
0.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9850.000000
0.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18900.000000
0.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5850.000000
0.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8550.000000
0.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 9600.000000
0.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7600.000000
0.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10500.000000
0.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4151446.350517

Entering candidate fitness function

Candidate fitness: 7.098402e+06

Exiting candidate fitness function


************************************************
Iteration 5 results:
************************************************
Candidate: 0001000000
************************************************
Fitness: 7098402.500000
************************************************

Actual time: 82.000000

Iteration 5: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 5: Candidate 9

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 82.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38453 cols       114270 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  8941       4045519.363      D    481     0        .000000     2
 10630       4100765.726      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  10630 simplex iterations in 3s

Final objective                         : 4.100765725916302e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 85.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13000.000000
0.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14000.000000
0.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5250.000000
0.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17300.000000
0.000000	16050.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15900.000000
0.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 7750.000000
0.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 7050.000000
0.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 9] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 11] = 15900.000000
0.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22750.000000
0.000000	21500.000000	20250.000000	19000.000000	17750.000000	16500.000000	15250.000000	14000.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6000.000000
0.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 15050.000000
0.000000	13800.000000	12550.000000	11300.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9250.000000
0.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 13000.000000
0.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12100.000000
0.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19000.000000
0.000000	17750.000000	16500.000000	15250.000000	14000.000000	12750.000000	11500.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 13950.000000
0.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19200.000000
0.000000	17950.000000	16700.000000	15450.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19650.000000
0.000000	18400.000000	17150.000000	15900.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9750.000000
0.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18550.000000
0.000000	17300.000000	16050.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8800.000000
0.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5900.000000
0.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 8850.000000
0.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10250.000000
0.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 9750.000000
0.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 9] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4100765.725916

Entering candidate fitness function

Candidate fitness: 6.913241e+06

Exiting candidate fitness function


************************************************
Iteration 5 results:
************************************************
Candidate: 0001000100
************************************************
Fitness: 6913241.000000
************************************************

Actual time: 85.000000

Iteration 5: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 85.000000


************************************************
Generation 5(Before sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0001000000	Fitness value: 7.098402e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0001000100	Fitness value: 6.913241e+06
Candidate 10:  0011000000	Fitness value: 6.710772e+06
************************************************


************************************************
Generation 5(After sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0011000000	Fitness value: 6.710772e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0001000100	Fitness value: 6.913241e+06
Candidate 10:  0001000000	Fitness value: 7.098402e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0001000100
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************

Entering crossover function

3	5	

Crossover point is 3

Second crossover point is 5
3	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	0	

Crossover point is 4

Second crossover point is 0

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

0	6	

Crossover point is 0

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

4	1	

Crossover point is 4

Second crossover point is 1
0	8	

The parent chromosomes at these indexes are the same

6	9	

Crossover point is 6

Second crossover point is 9
2	7	

The parent chromosomes at these indexes are the same

8	5	

Crossover point is 8

Second crossover point is 5
2	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

6	1	

Crossover point is 6

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

3	4	

Crossover point is 3

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

3	3	9	

Crossover point is 3

Second crossover point is 9
2	6	

The parent chromosomes at these indexes are the same

2	7	

Crossover point is 2

Second crossover point is 7
0	6	

The parent chromosomes at these indexes are the same

2	1	

Crossover point is 2

Second crossover point is 1
6	9	

The parent chromosomes at these indexes are the same

8	1	

Crossover point is 8

Second crossover point is 1
0	8	

The parent chromosomes at these indexes are the same

9	6	

Crossover point is 9

Second crossover point is 6
8	1	

The parent chromosomes at these indexes are the same

4	7	

Crossover point is 4

Second crossover point is 7
6	7	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

3	8	

Crossover point is 3

Second crossover point is 8
5	8	

The parent chromosomes at these indexes are the same

0	8	

Crossover point is 0

Second crossover point is 8
1	9	

The parent chromosomes at these indexes are the same

1	8	

Crossover point is 1

Second crossover point is 8
2	9	

The parent chromosomes at these indexes are the same

8	9	

Crossover point is 8

Second crossover point is 9
1	9	

The parent chromosomes at these indexes are the same

6	0	

Crossover point is 6

Second crossover point is 0
8	7	

The parent chromosomes at these indexes are the same

0	6	

Crossover point is 0

Second crossover point is 6
7	7	

5	8	

Crossover point is 5

Second crossover point is 8
2	3	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

9	4	

Crossover point is 9

Second crossover point is 4
9	8	

The parent chromosomes at these indexes are the same

0	7	

Crossover point is 0

Second crossover point is 7
9	9	

9	9	0	

Crossover point is 9

Second crossover point is 0
7	2	

The parent chromosomes at these indexes are the same

0	5	

Crossover point is 0

Second crossover point is 5
1	1	

5	7	

Crossover point is 5

Second crossover point is 7
2	3	

The parent chromosomes at these indexes are the same

4	3	

Crossover point is 4

Second crossover point is 3
0	1	

The parent chromosomes at these indexes are the same

1	5	

Crossover point is 1

Second crossover point is 5
0	3	

The parent chromosomes at these indexes are the same

8	6	

Crossover point is 8

Second crossover point is 6
3	3	

5	2	

Crossover point is 5

Second crossover point is 2
4	3	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	3	

Crossover point is 1

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

3	1	

Crossover point is 3

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

0	3	

Crossover point is 0

Second crossover point is 3
4	6	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	6	

Crossover point is 4

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

1	1	9	

Crossover point is 1

Second crossover point is 9

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

6	2	

Crossover point is 6

Second crossover point is 2
5	7	

The parent chromosomes at these indexes are the same

3	1	

Crossover point is 3

Second crossover point is 1
8	7	

The parent chromosomes at these indexes are the same

0	4	

Crossover point is 0

Second crossover point is 4
1	4	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

0	3	

Crossover point is 0

Second crossover point is 3

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

8	4	

Crossover point is 8

Second crossover point is 4

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

1	7	

Crossover point is 1

Second crossover point is 7
5	6	

The parent chromosomes at these indexes are the same

8	8	1	

Crossover point is 8

Second crossover point is 1
4	3	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

8	6	

Crossover point is 8

Second crossover point is 6

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

4	7	

Crossover point is 4

Second crossover point is 7

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

0	9	

Crossover point is 0

Second crossover point is 9
7	8	

The parent chromosomes at these indexes are the same

3	9	

Crossover point is 3

Second crossover point is 9
6	1	

The parent chromosomes at these indexes are the same

9	1	

Crossover point is 9

Second crossover point is 1
2	3	

The parent chromosomes at these indexes are the same

2	5	

Crossover point is 2

Second crossover point is 5
1	6	

The parent chromosomes at these indexes are the same

0	3	

Crossover point is 0

Second crossover point is 3
4	6	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

0	2	

Crossover point is 0

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	2	

Crossover point is 4

Second crossover point is 2

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Crossover for the 2nd offspring in the other order is unsuccessful or we have Already tried enough attempts at generating a unique child from crossover. Reached max. limit for crossover attempts.

7	0	

Crossover point is 7

Second crossover point is 0
3	2	

The parent chromosomes at these indexes are the same

7	5	

Crossover point is 7

Second crossover point is 5
2	7	

The parent chromosomes at these indexes are the same

3	1	

Crossover point is 3

Second crossover point is 1
0	2	

The parent chromosomes at these indexes are the same

7	1	

Crossover point is 7

Second crossover point is 1
2	9	

The parent chromosomes at these indexes are the same

3	6	

Crossover point is 3

Second crossover point is 6
1	9	

The parent chromosomes at these indexes are the same

8	8	9	

Crossover point is 8

Second crossover point is 9
2	2	

5	2	

Crossover point is 5

Second crossover point is 2
4	0	

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

4	1	

Crossover point is 4

Second crossover point is 1

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.

8	5	

Crossover point is 8

Second crossover point is 5

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

This crossover operation has generated a child that is a duplicate of one of the candidates in the parent population. hence                  we need to repeat this crossover operation for this pair of candidates with a different crossover point.


Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Child from crossover not feasible

Crossover for the 2nd offspring in the other order is unsuccessful or Enough attempts have been made to do a crossover operation for this pair but all crossovers have resulted in infeasible                     children

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 25.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Duplicate found

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 6 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 1, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 10 in the pool of children

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 6


************************************************
Generation 6
************************************************
Candidate 1: 0011000000
Candidate 2: 0011000000
Candidate 3: 0011000000
Candidate 4: 0011000000
Candidate 5: 0011000000
Candidate 6: 0011000000
Candidate 7: 0001001000
Candidate 8: 0011000000
Candidate 9: 0011000000
Candidate 10: 0011000000
************************************************

Actual time: 85.000000

Iteration 6: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 2

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 3

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 4

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 6

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 7

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 85.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38453 cols       114270 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9374       3830923.958      D    550     0        .000000     2
 12936       4114458.335      D    268     0        .000000     4
 13415       4118108.974      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  13415 simplex iterations in 4s

Final objective                         : 4.118108974069487e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 8.882e-15 / 8.882e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 89.000000

Inside print function

Travelers on all the links
[1, 2] = 4450.000000
0.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4250.000000
0.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8050.000000
0.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 14150.000000
0.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9350.000000
0.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13300.000000
0.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 18150.000000
0.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5100.000000
0.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 15650.000000
0.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 12150.000000
0.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11400.000000
0.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 13750.000000
0.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 19500.000000
0.000000	18250.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	

[10, 9] = 21400.000000
0.000000	20150.000000	18900.000000	17650.000000	16400.000000	15150.000000	13900.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	

[10, 11] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23150.000000
0.000000	21900.000000	20650.000000	19400.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6850.000000
0.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 18650.000000
0.000000	17400.000000	16150.000000	14900.000000	13650.000000	12400.000000	11150.000000	9900.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10400.000000
0.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 7700.000000
0.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12450.000000
0.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8500.000000
0.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 18800.000000
0.000000	17550.000000	16300.000000	15050.000000	13800.000000	12550.000000	11300.000000	10050.000000	8800.000000	7550.000000	6300.000000	5050.000000	3800.000000	2550.000000	1300.000000	50.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19750.000000
0.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18300.000000
0.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14500.000000
0.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11550.000000
0.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15550.000000
0.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 13550.000000
0.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19850.000000
0.000000	18600.000000	17350.000000	16100.000000	14850.000000	13600.000000	12350.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8850.000000
0.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7100.000000
0.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 9850.000000
0.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8500.000000
0.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8200.000000
0.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 11] = 4300.000000
0.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4118108.974069

Entering candidate fitness function

Candidate fitness: 7.039754e+06

Exiting candidate fitness function


************************************************
Iteration 6 results:
************************************************
Candidate: 0001001000
************************************************
Fitness: 7039754.000000
************************************************

Actual time: 89.000000

Iteration 6: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 9

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 6: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 89.000000


************************************************
Generation 6(Before sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0001001000	Fitness value: 7.039754e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0011000000	Fitness value: 6.710772e+06
Candidate 10:  0011000000	Fitness value: 6.710772e+06
************************************************


************************************************
Generation 6(After sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0011000000	Fitness value: 6.710772e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0011000000	Fitness value: 6.710772e+06
Candidate 7:  0011000000	Fitness value: 6.710772e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0011000000	Fitness value: 6.710772e+06
Candidate 10:  0001001000	Fitness value: 7.039754e+06
************************************************

Selected candidates for crossover operations are as below
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************
************************************************
Candidate: 0011000000
************************************************

Entering crossover function

5	2	

Crossover point is 5

Second crossover point is 2
6	3	

The parent chromosomes at these indexes are the same

8	1	

Crossover point is 8

Second crossover point is 1
4	8	

The parent chromosomes at these indexes are the same

9	5	

Crossover point is 9

Second crossover point is 5
6	5	

The parent chromosomes at these indexes are the same

1	3	

Crossover point is 1

Second crossover point is 3
7	1	

The parent chromosomes at these indexes are the same

7	3	

Crossover point is 7

Second crossover point is 3
6	0	

The parent chromosomes at these indexes are the same

6	4	

Crossover point is 6

Second crossover point is 4
1	1	

0	2	

Crossover point is 0

Second crossover point is 2
6	2	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

4	9	

Crossover point is 4

Second crossover point is 9
7	6	

The parent chromosomes at these indexes are the same

6	0	

Crossover point is 6

Second crossover point is 0
5	7	

The parent chromosomes at these indexes are the same

5	4	

Crossover point is 5

Second crossover point is 4
7	1	

The parent chromosomes at these indexes are the same

0	2	

Crossover point is 0

Second crossover point is 2
2	4	

The parent chromosomes at these indexes are the same

0	3	

Crossover point is 0

Second crossover point is 3
2	3	

The parent chromosomes at these indexes are the same

0	2	

Crossover point is 0

Second crossover point is 2
0	5	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

1	5	

Crossover point is 1

Second crossover point is 5
7	8	

The parent chromosomes at these indexes are the same

8	9	

Crossover point is 8

Second crossover point is 9
2	7	

The parent chromosomes at these indexes are the same

6	9	

Crossover point is 6

Second crossover point is 9
4	7	

The parent chromosomes at these indexes are the same

5	2	

Crossover point is 5

Second crossover point is 2
3	9	

The parent chromosomes at these indexes are the same

0	4	

Crossover point is 0

Second crossover point is 4
0	2	

The parent chromosomes at these indexes are the same

6	5	

Crossover point is 6

Second crossover point is 5
3	0	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

6	0	

Crossover point is 6

Second crossover point is 0
9	7	

The parent chromosomes at these indexes are the same

6	4	

Crossover point is 6

Second crossover point is 4
8	1	

The parent chromosomes at these indexes are the same

1	6	

Crossover point is 1

Second crossover point is 6
9	0	

The parent chromosomes at these indexes are the same

9	7	

Crossover point is 9

Second crossover point is 7
7	9	

The parent chromosomes at these indexes are the same

2	5	

Crossover point is 2

Second crossover point is 5
4	4	

8	3	

Crossover point is 8

Second crossover point is 3
4	2	

The parent chromosomes at these indexes are the same

3	7	

Crossover point is 3

Second crossover point is 7
8	8	

0	9	

Crossover point is 0

Second crossover point is 9
6	7	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

6	4	

Crossover point is 6

Second crossover point is 4
6	0	

The parent chromosomes at these indexes are the same

3	7	

Crossover point is 3

Second crossover point is 7
2	9	

The parent chromosomes at these indexes are the same

7	2	

Crossover point is 7

Second crossover point is 2
9	4	

The parent chromosomes at these indexes are the same

0	8	

Crossover point is 0

Second crossover point is 8
6	5	

The parent chromosomes at these indexes are the same

2	1	

Crossover point is 2

Second crossover point is 1
3	5	

The parent chromosomes at these indexes are the same

6	6	9	

Crossover point is 6

Second crossover point is 9
4	4	

8	5	

Crossover point is 8

Second crossover point is 5
4	4	

2	4	

Crossover point is 2

Second crossover point is 4
0	7	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

1	0	

Crossover point is 1

Second crossover point is 0
7	3	

The parent chromosomes at these indexes are the same

0	5	

Crossover point is 0

Second crossover point is 5
6	9	

The parent chromosomes at these indexes are the same

9	6	

Crossover point is 9

Second crossover point is 6
7	6	

The parent chromosomes at these indexes are the same

2	9	

Crossover point is 2

Second crossover point is 9
8	5	

The parent chromosomes at these indexes are the same

5	5	1	

Crossover point is 5

Second crossover point is 1
4	9	

The parent chromosomes at these indexes are the same

6	3	

Crossover point is 6

Second crossover point is 3
4	0	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

6	4	

Crossover point is 6

Second crossover point is 4
8	4	

The parent chromosomes at these indexes are the same

5	9	

Crossover point is 5

Second crossover point is 9
4	3	

The parent chromosomes at these indexes are the same

2	5	

Crossover point is 2

Second crossover point is 5
8	9	

The parent chromosomes at these indexes are the same

4	8	

Crossover point is 4

Second crossover point is 8
5	1	

The parent chromosomes at these indexes are the same

4	7	

Crossover point is 4

Second crossover point is 7
1	3	

The parent chromosomes at these indexes are the same

3	6	

Crossover point is 3

Second crossover point is 6
8	5	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

7	2	

Crossover point is 7

Second crossover point is 2
5	2	

The parent chromosomes at these indexes are the same

3	2	

Crossover point is 3

Second crossover point is 2
8	8	

1	3	

Crossover point is 1

Second crossover point is 3
3	0	

The parent chromosomes at these indexes are the same

8	6	

Crossover point is 8

Second crossover point is 6
3	3	

4	2	

Crossover point is 4

Second crossover point is 2
7	2	

The parent chromosomes at these indexes are the same

8	9	

Crossover point is 8

Second crossover point is 9
7	6	

The parent chromosomes at these indexes are the same

1	1	9	

Crossover point is 1

Second crossover point is 9
8	9	

The parent chromosomes at these indexes are the same

5	0	

Crossover point is 5

Second crossover point is 0
7	8	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

9	1	

Crossover point is 9

Second crossover point is 1
8	8	

9	9	1	

Crossover point is 9

Second crossover point is 1
2	0	

The parent chromosomes at these indexes are the same

0	9	

Crossover point is 0

Second crossover point is 9
3	3	

3	6	

Crossover point is 3

Second crossover point is 6
1	6	

The parent chromosomes at these indexes are the same

5	1	

Crossover point is 5

Second crossover point is 1
3	1	

The parent chromosomes at these indexes are the same

2	4	

Crossover point is 2

Second crossover point is 4
1	1	

4	6	

Crossover point is 4

Second crossover point is 6
1	2	

The parent chromosomes at these indexes are the same

4	6	

Crossover point is 4

Second crossover point is 6
1	6	

The parent chromosomes at these indexes are the same

4	9	

Crossover point is 4

Second crossover point is 9
5	4	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

8	4	

Crossover point is 8

Second crossover point is 4
1	7	

The parent chromosomes at these indexes are the same

8	5	

Crossover point is 8

Second crossover point is 5
1	5	

The parent chromosomes at these indexes are the same

7	8	

Crossover point is 7

Second crossover point is 8
0	8	

The parent chromosomes at these indexes are the same

2	1	

Crossover point is 2

Second crossover point is 1
1	7	

The parent chromosomes at these indexes are the same

2	3	

Crossover point is 2

Second crossover point is 3
1	9	

The parent chromosomes at these indexes are the same

4	3	

Crossover point is 4

Second crossover point is 3
4	1	

The parent chromosomes at these indexes are the same

Enough attempts have been made to do a crossover operation but the parent chromosome pairs are always same.

k = 10

Exiting crossover function

Entering mutation routine

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 50.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 35.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 3 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 40.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 20.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 5 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 0, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 10.000000

Exiting feasiblity

Entering check_duplicate function

Exiting check_duplicate function

Entering check_duplicate function

Exiting check_duplicate function

Mutation successfully done for candidate 6 in the pool of children

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 1, orig: 7, term: 16
 0, orig: 16, term: 7
 
Budget = 30.000000

Entering feasibility
1, orig: 13, term: 14
 0, orig: 14, term: 13
 0, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 1, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 45.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 0, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 1, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Entering feasibility
0, orig: 13, term: 14
 0, orig: 14, term: 13
 1, orig: 11, term: 15
 1, orig: 15, term: 11
 1, orig: 22, term: 19
 0, orig: 19, term: 22
 0, orig: 9, term: 11
 0, orig: 11, term: 9
 0, orig: 7, term: 16
 1, orig: 16, term: 7
 
Budget = 40.000000

Exiting mutation routine

Finished creating the next generation

Genetic algorithm: Iteration 7


************************************************
Generation 7
************************************************
Candidate 1: 0011000000
Candidate 2: 0011000000
Candidate 3: 0011000000
Candidate 4: 0001010000
Candidate 5: 0011000000
Candidate 6: 0000000101
Candidate 7: 0000100000
Candidate 8: 0011000000
Candidate 9: 0011000000
Candidate 10: 0011000000
************************************************

Actual time: 89.000000

Iteration 7: Candidate 1

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 2

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 3

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 4

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 90.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13676 rows        38454 cols       114273 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1058     0        .000000     0
  9248       4023371.526      D    423     0        .000000     2
 11422       4127845.638      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  11422 simplex iterations in 3s

Final objective                         : 4.127845638240165e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 3.553e-15 / 3.553e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 93.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 7950.000000
0.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4350.000000
0.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13900.000000
0.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9950.000000
0.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13900.000000
0.000000	12650.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17900.000000
0.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 16950.000000
0.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15950.000000
0.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6050.000000
0.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15350.000000
0.000000	14100.000000	12850.000000	11600.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 9] = 21650.000000
0.000000	20400.000000	19150.000000	17900.000000	16650.000000	15400.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	

[10, 11] = 15300.000000
0.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 23150.000000
0.000000	21900.000000	20650.000000	19400.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 18500.000000
0.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 10150.000000
0.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12650.000000
0.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 9100.000000
0.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 19600.000000
0.000000	18350.000000	17100.000000	15850.000000	14600.000000	13350.000000	12100.000000	10850.000000	9600.000000	8350.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	

[15, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19400.000000
0.000000	18150.000000	16900.000000	15650.000000	14400.000000	13150.000000	11900.000000	10650.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 14550.000000
0.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 10650.000000
0.000000	9400.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11600.000000
0.000000	10350.000000	9100.000000	7850.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 13950.000000
0.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 15900.000000
0.000000	14650.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 9650.000000
0.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18200.000000
0.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 9900.000000
0.000000	8650.000000	7400.000000	6150.000000	4900.000000	3650.000000	2400.000000	1150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 5800.000000
0.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7050.000000
0.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 9200.000000
0.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 10800.000000
0.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7850.000000
0.000000	6600.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 11] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 22] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4127845.638240

Entering candidate fitness function

Candidate fitness: 7.001734e+06

Exiting candidate fitness function


************************************************
Iteration 7 results:
************************************************
Candidate: 0001010000
************************************************
Fitness: 7001734.500000
************************************************

Actual time: 93.000000

Iteration 7: Candidate 5

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 6

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15291 (      0 spare) rows
       42746 (      0 spare) structural columns
      126600 (      0 spare) non-zero elements
Global Statistics
           2 entities        0 sets        0 set members

Actual time: 93.000000
Minimizing LP TAP
Original problem has:
     15291 rows        42746 cols       126600 elements
Presolved problem has:
     13737 rows        38552 cols       114544 elements
Crash basis containing 13 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         20.000000      D   1059     0        .000000     0
  9043       3975718.801      D    428     0        .000000     2
 12634       4192207.415      P      0     0        .000000     4
Uncrunching matrix
Optimal solution found
Dual solved problem
  12634 simplex iterations in 4s

Final objective                         : 4.192207414830843e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 5.329e-15 / 5.329e-15
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 97.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13250.000000
0.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 10550.000000
0.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 14300.000000
0.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17050.000000
0.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 18300.000000
0.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11450.000000
0.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 16050.000000
0.000000	14800.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 12650.000000
0.000000	11400.000000	10150.000000	8900.000000	7650.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6600.000000
0.000000	5350.000000	4100.000000	2850.000000	1600.000000	350.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 7650.000000
0.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 16250.000000
0.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6700.000000
0.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 22500.000000
0.000000	21250.000000	20000.000000	18750.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	

[10, 9] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[10, 11] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22700.000000
0.000000	21450.000000	20200.000000	18950.000000	17700.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 15100.000000
0.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 7700.000000
0.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9500.000000
0.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12250.000000
0.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12350.000000
0.000000	11100.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 23000.000000
0.000000	21750.000000	20500.000000	19250.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	

[15, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 19300.000000
0.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18250.000000
0.000000	17000.000000	15750.000000	14500.000000	13250.000000	12000.000000	10750.000000	9500.000000	8250.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 9950.000000
0.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 11100.000000
0.000000	9850.000000	8600.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14800.000000
0.000000	13550.000000	12300.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19300.000000
0.000000	18050.000000	16800.000000	15550.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 19050.000000
0.000000	17800.000000	16550.000000	15300.000000	14050.000000	12800.000000	11550.000000	10300.000000	9050.000000	7800.000000	6550.000000	5300.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5950.000000
0.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 18450.000000
0.000000	17200.000000	15950.000000	14700.000000	13450.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 8850.000000
0.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8350.000000
0.000000	7100.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 8250.000000
0.000000	7000.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 9] = 4700.000000
0.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 7] = 3750.000000
0.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4192207.414831

Entering candidate fitness function

Candidate fitness: 7.328928e+06

Exiting candidate fitness function


************************************************
Iteration 7 results:
************************************************
Candidate: 0000000101
************************************************
Fitness: 7328928.000000
************************************************

Actual time: 97.000000

Iteration 7: Candidate 7

Entering cache lookup

Exiting cache lookup

Cache miss. Will have to solve the TAP for this candidate

Points and slopes initialized

Demand variables initialized

Decision variables declared

Flow aggregation constraints declared

Demand at origin constraints declared

Demand at destination constraints declared

Budget constraints declared

Before objective
1 2	1 3	2 1	2 6	3 1	3 4	3 12	4 3	4 5	4 11	5 4	5 6	5 9	6 2	6 5	6 8	7 8	7 18	8 6	8 7	8 9	8 16	9 5	9 8	9 10	10 9	10 11	10 15	10 16	10 17	11 4	11 10	11 12	11 14	12 3	12 11	12 13	13 12	13 24	14 11	14 15	14 23	15 10	15 14	15 19	15 22	16 8	16 10	16 17	16 18	17 10	17 16	17 19	18 7	18 16	18 20	19 15	19 17	19 20	20 18	20 19	20 21	20 22	21 20	21 22	21 24	22 15	22 20	22 21	22 23	23 14	23 22	23 24	24 13	24 21	24 23	

Reading Problem TAP
Problem Statistics
       15270 (      0 spare) rows
       42197 (      0 spare) structural columns
      124974 (      0 spare) non-zero elements
Global Statistics
           1 entities        0 sets        0 set members

Actual time: 98.000000
Minimizing LP TAP
Original problem has:
     15270 rows        42197 cols       124974 elements
Presolved problem has:
     13656 rows        37951 cols       112785 elements
Crash basis containing 14 structural columns created
Starting parallel dual simplex, using up to 8 threads

   Its         Obj Value      S   Ninf  Nneg   Sum Dual Inf  Time
     0         10.000000      D   1058     0        .000000     0
  9335       4122699.809      D    353     0        .000000     2
 11544       4217013.057      P      0     0        .000000     3
Uncrunching matrix
Optimal solution found
Dual solved problem
  11544 simplex iterations in 3s

Final objective                         : 4.217013056937991e+06
  Max primal violation      (abs / rel) :       0.0 /       0.0
  Max dual violation        (abs / rel) : 1.066e-14 / 1.066e-14
  Max complementarity viol. (abs / rel) :       0.0 /       0.0
All values within tolerances

Actual time: 101.000000

Inside print function

Travelers on all the links
[1, 2] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[1, 3] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 1] = 4550.000000
0.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[2, 6] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 1] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 4] = 13450.000000
0.000000	12200.000000	10950.000000	9700.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[3, 12] = 9950.000000
0.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 3] = 13700.000000
0.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 5] = 17450.000000
0.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[4, 11] = 5200.000000
0.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 4] = 17700.000000
0.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 6] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[5, 9] = 15450.000000
0.000000	14200.000000	12950.000000	11700.000000	10450.000000	9200.000000	7950.000000	6700.000000	5450.000000	4200.000000	2950.000000	1700.000000	450.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 2] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 5] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[6, 8] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 8] = 11500.000000
0.000000	10250.000000	9000.000000	7750.000000	6500.000000	5250.000000	4000.000000	2750.000000	1500.000000	250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[7, 18] = 15550.000000
0.000000	14300.000000	13050.000000	11800.000000	10550.000000	9300.000000	8050.000000	6800.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 6] = 12500.000000
0.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 7] = 11650.000000
0.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 9] = 6350.000000
0.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[8, 16] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 5] = 15700.000000
0.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 8] = 6800.000000
0.000000	5550.000000	4300.000000	3050.000000	1800.000000	550.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[9, 10] = 21450.000000
0.000000	20200.000000	18950.000000	17700.000000	16450.000000	15200.000000	13950.000000	12700.000000	11450.000000	10200.000000	8950.000000	7700.000000	6450.000000	5200.000000	3950.000000	2700.000000	1450.000000	200.000000	0.000000	0.000000	

[10, 9] = 22250.000000
0.000000	21000.000000	19750.000000	18500.000000	17250.000000	16000.000000	14750.000000	13500.000000	12250.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	

[10, 11] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 15] = 22600.000000
0.000000	21350.000000	20100.000000	18850.000000	17600.000000	16350.000000	15100.000000	13850.000000	12600.000000	11350.000000	10100.000000	8850.000000	7600.000000	6350.000000	5100.000000	3850.000000	2600.000000	1350.000000	100.000000	0.000000	

[10, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[10, 17] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 4] = 5300.000000
0.000000	4050.000000	2800.000000	1550.000000	300.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 10] = 17500.000000
0.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 12] = 8400.000000
0.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[11, 14] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 3] = 9700.000000
0.000000	8450.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 11] = 8600.000000
0.000000	7350.000000	6100.000000	4850.000000	3600.000000	2350.000000	1100.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[12, 13] = 12250.000000
0.000000	11000.000000	9750.000000	8500.000000	7250.000000	6000.000000	4750.000000	3500.000000	2250.000000	1000.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 12] = 12300.000000
0.000000	11050.000000	9800.000000	8550.000000	7300.000000	6050.000000	4800.000000	3550.000000	2300.000000	1050.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[13, 24] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 11] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 15] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[14, 23] = 8150.000000
0.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 10] = 23300.000000
0.000000	22050.000000	20800.000000	19550.000000	18300.000000	17050.000000	15800.000000	14550.000000	13300.000000	12050.000000	10800.000000	9550.000000	8300.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	

[15, 14] = 9400.000000
0.000000	8150.000000	6900.000000	5650.000000	4400.000000	3150.000000	1900.000000	650.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 19] = 14450.000000
0.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[15, 22] = 18750.000000
0.000000	17500.000000	16250.000000	15000.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 8] = 8450.000000
0.000000	7200.000000	5950.000000	4700.000000	3450.000000	2200.000000	950.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 10] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 17] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[16, 18] = 14950.000000
0.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 10] = 8100.000000
0.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 16] = 11250.000000
0.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[17, 19] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 7] = 15400.000000
0.000000	14150.000000	12900.000000	11650.000000	10400.000000	9150.000000	7900.000000	6650.000000	5400.000000	4150.000000	2900.000000	1650.000000	400.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 16] = 14650.000000
0.000000	13400.000000	12150.000000	10900.000000	9650.000000	8400.000000	7150.000000	5900.000000	4650.000000	3400.000000	2150.000000	900.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[18, 20] = 19250.000000
0.000000	18000.000000	16750.000000	15500.000000	14250.000000	13000.000000	11750.000000	10500.000000	9250.000000	8000.000000	6750.000000	5500.000000	4250.000000	3000.000000	1750.000000	500.000000	0.000000	0.000000	0.000000	0.000000	

[19, 15] = 19450.000000
0.000000	18200.000000	16950.000000	15700.000000	14450.000000	13200.000000	11950.000000	10700.000000	9450.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	

[19, 17] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[19, 20] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 18] = 18700.000000
0.000000	17450.000000	16200.000000	14950.000000	13700.000000	12450.000000	11200.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 19] = 8750.000000
0.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 21] = 6250.000000
0.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[20, 22] = 7100.000000
0.000000	5850.000000	4600.000000	3350.000000	2100.000000	850.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 20] = 5700.000000
0.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 22] = 9450.000000
0.000000	8200.000000	6950.000000	5700.000000	4450.000000	3200.000000	1950.000000	700.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[21, 24] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 15] = 15000.000000
0.000000	13750.000000	12500.000000	11250.000000	10000.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 20] = 7000.000000
0.000000	5750.000000	4500.000000	3250.000000	2000.000000	750.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 21] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 23] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 14] = 7500.000000
0.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 22] = 10000.000000
0.000000	8750.000000	7500.000000	6250.000000	5000.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[23, 24] = 8300.000000
0.000000	7050.000000	5800.000000	4550.000000	3300.000000	2050.000000	800.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 13] = 11200.000000
0.000000	9950.000000	8700.000000	7450.000000	6200.000000	4950.000000	3700.000000	2450.000000	1200.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 21] = 10600.000000
0.000000	9350.000000	8100.000000	6850.000000	5600.000000	4350.000000	3100.000000	1850.000000	600.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[24, 23] = 7650.000000
0.000000	6400.000000	5150.000000	3900.000000	2650.000000	1400.000000	150.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	

[22, 19] = 5000.000000
0.000000	3750.000000	2500.000000	1250.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	


Exiting print function

Objective value: 4217013.056938

Entering candidate fitness function

Candidate fitness: 7.412594e+06

Exiting candidate fitness function


************************************************
Iteration 7 results:
************************************************
Candidate: 0000100000
************************************************
Fitness: 7412594.000000
************************************************

Actual time: 101.000000

Iteration 7: Candidate 8

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 9

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Iteration 7: Candidate 10

Entering cache lookup

Pattern:
************************************************
Candidate: 0011000000
************************************************

Match:
************************************************
Candidate: 0011000000
************************************************

Cache hit. No need to re compute for this candidate again
************************************************
Candidate: 0011000000
************************************************

Cache hit. Do not need to solve the TAP for this candidate. Setting the fitness as computed before

Actual time: 101.000000


************************************************
Generation 7(Before sorting)
************************************************
Candidate 1:  0011000000	Fitness value: 6.710772e+06
Candidate 2:  0011000000	Fitness value: 6.710772e+06
Candidate 3:  0011000000	Fitness value: 6.710772e+06
Candidate 4:  0001010000	Fitness value: 7.001734e+06
Candidate 5:  0011000000	Fitness value: 6.710772e+06
Candidate 6:  0000000101	Fitness value: 7.328928e+06
Candidate 7:  0000100000	Fitness value: 7.412594e+06
Candidate 8:  0011000000	Fitness value: 6.710772e+06
Candidate 9:  0011000000	Fitness value: 6.710772e+06
Candidate 10:  0011000000	Fitness value: 6.710772e+06
************************************************

Genetic algorithm terminates because the objective function value has remained the same for a long time

Final objective value for DNDP is 6710771.500000
